<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <metadata name="BindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>154, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEACABzEQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAHvAAAB2wgGAAAA4mISdgAAETpJ
        REFUeJzt3dFy4kgShlF5ot//jTe8Fz1MYzcYSUiq+jPPidi7nTZIRX1KgfHH/z4XoJ8jX/kfB/5bwAq/
        Rj8A4FJnXK7f/k0Rh4uIN/RwxT02EYeL/DP6AQCnu/rNsc8BPxNaMXlDXaMDahKHk5i8oabR4b4302OB
        EsQb6hFLKE68oZZZwz3r44JI4g1cRcDhIOINdYgjNCHeUENKuFMeJ0xNvAEgjHgDQBjxBoAw4g0AYcQb
        8qV9CCzt8cJ0xBsAwog3AIQRbwAII94AEEa8ASCMeANAGPEGrvYx+gFAOvEGgDDiDQBhxBvyuQ0NzYg3
        AIQRbwAII97AldzihwOIN9SQEMWExwgRxBvqEEdoQryBK7iwgAOJN9QyYyRnfEwQTbyhHrGE4sQbapol
        4LM8DihFvKGukeH8GPzzobRfox8AcKpbQD8v/nnAicQbejg74qINF3LbHHo543a2cMPFTN7Q06PgvprK
        RRomId7AjThDCLfNASCMeANAGPEGgDDiDQBhxBsAwog3AIQRbwAII94AEEa8ASCMeANAGPEGgDDiDQBh
        /GESgAxn/S12Aok3wHyEmh+JN8B4Ys0m3vMGGEu42czkDTCGaLObeANcS7R5m3gDXEO0OYz3vAHOJ9wc
        yuQNHO17qD6GPIo5iDanEG9gD1F6zTHiNOINPHNUfD6XftO3cHMq8YbeROZ4jimnE2/oQVCu4ThzCfGG
        TCIxH+eEy4g3jGfTz+cccinxhnFs+MAuvqQF4D0uwriceAPsJ9wMId4AEEa8AfYxdTOMeANsJ9wMJd4A
        EEa8AbYxdTOceAOsJ9xMQbwBIIx4A6xj6mYa4g0AYXy3OcBrM0zdHyv/f0c81rU/a7QzzkvEcxdvgHlE
        hIPxxBtgrCODPcMdgqt0eq5/EW+An50VCVM2u4k3jHPbvFtPEJNr+54qcxNvGO9+Mxfy2oSbQ4g3zOX7
        5i7mdaSEO+VxtibeMDe31sc56piLIYcTb8jg1vq1hJupiTfkEfIMwp0n5pyJN2QT8jnFRCBU+7Uu3lCH
        kM9BuDmdeENNPui2395jJtpcxl8Vg9oEBQoSb4A/TN1EEG+A9wh3DVHnUbyhvqhNCXhNvAF+23PL3IUR
        Q4g3wD7CzTDiDeBX6ggj3gDbmboZSrwBthFuhhNvgBq63Prv8jx/JN4A65m6mYJ4A6wj3EzDHyYBEGbC
        mLwBuOl6ERP3vMUbAMKINwCEEW+AfF1+farL83xJvAEgjHgDQBjxBqCzuE+aL4t4A0Ac8QaAMOINAGHE
        G4BlCX3vtyvxBoAw4g0AYcQbAMKINwCEEW+AbL7vuyHxBoAw4g1AAncY7og3AIQRb4BcptGmxBsAwog3
        AIQRbwAII94AEEa8ASCMeANAGPEGYPa/5e1X4r4Rb4BMgtaYeAPQ1ex3HJ4SbwAII94AEEa8ASCMeAPk
        8WG15sQboLfYD211Jt4AEEa8ASCMeANAGPEGyOLDaog3AKQRbwAII94AOdwyZ1kW8QaAOOINAGHEGwDC
        iDcAHUV/Lax4A2TwYTX+I94AfUVPn52JNwCEEW+A+bllzhfiDUBH0RdE4g0AYcQbYG7RE+IBuj//h8Qb
        oCefNA8m3gDzMnXykHgDQBjxBmBmbu8/IN4Ac3LL/Hyxx1i8ASCMeAPMJ3Yi5Bq/Rj8AAOAvP13AfZi8
        AWAur+68fIo3wFzcMucl8QaYx1Xh9utX4cQbAOax6gJOvAHm4Hb5GJHHXbwB6C4u4OINMN6V8fB+dz6/
        KgYwWNzUx2lWrwXxBoCwiyjxBhgnKhicatNaEG+AMYR7PjHnRLwBYKwtFw0fyyLeACPETHgNXX1udv08
        8QaAr64K+O6fI94A1xo5dfsd7/Wmvjsi3gDXmToIExt10XHW+fp8998WbwB47u3QPvj33ibeANcwdWd7
        9/wdehHw66h/CICnZgi397vfd38etxzPo87/fz9TvAFgu6EXZG6bA5xrhqm7gu53Dr48f/EGOI9wcwrx
        BjiHcHMa8QaAMOINcLzZpu7u7xeXI95Q32whAbb56+JLvIErdLqAmO25Vpq6Kz2Xt4g31DZbSIBtHl6w
        iDfUdPT3MR9hxsd0tOrPbwam78U3rEE1CfG4PUabMOwk3nlm2pxtvnOYaU1ssfd7olnPcc329PyJ93yS
        NuI1j9XmcY6kdbKGkMMG4j1Otc33mWfP0wa9Xcc1Y53sV/nYfSz1Xw8/nj/xvkb1RbbH92NSeaPZy7oR
        cnhIvM9h093u0THruFlbO8+54ONe5en75doWb2b2udTeoKtuPFeZ7YJvpvNZ+XXDIt5HmelFW43bpmxR
        /YKPrypO36vWr3jvV23BJBByeM1rI9fqc+cb1rb5vPsfYzkPzEY0x6hy3Dc9D5P3awIxNx9iAtoR7+dE
        O5Ov3qSrzms+/b3vzefObfO/uR1bg/MIvaRevOx63OL9h82+JueVDlLDdbS047D78Yq3zb0L5xl6SAn4
        W4+zc7xt5j35jQHONCIcKbG60uzH5O3H1y3eNm7uWQucYfZwdDHreTjkcXWKt02aZ6wNjnZFOD4u+jnJ
        Zjo+h56vLvG2OfOKNUKSmaI0uxkucg7/+R3ibVNmLWuFI50VjdEhSjXq8win/NzK8fZ+JntYNxztyM1b
        uN9z5RR+6s/5+F/Nbarms+JqNkqOtndvshbPc1QvLj1H1b4eVbQ5kq9a5Wj3a+nVfmXdXWPLOXn131+m
        UryFm7OIOGewnuYTc04qvOftPUquYp0BU0iPt82Uq7lYBIZLjrcNlJGsP2CYxHibfJiFdQgMkRZvmyWz
        sSaBy6XFG2Yk4MClkuJtgwSAJSfews3sfBYDuExCvG2IAHBn9ngLN2lM4MDpZo23DZB01i9wmhnjbdOj
        CmsZOMVs8bbZUY01DRxupnjb5KjK2gYONUu8bW5UZ40Dh5nh73nb1M635m/UOg/n+1yC/l4wMK8Z4s1+
        R4Zg7b8l8u8RcOBto2+bC8E+H8u4AAgPwGAm7wyzBfP743ERto3pG3jLyHjb8H+WtLmLOcCFRsXb5v63
        pFi/cv9cnOvHTN/AbiPibTP/o8PmLeTPCTiwi/e8x+i6YQv53wQc2OzqT5t337BHfkp8No7FH91fF8BG
        V8W7+18JE6rnHJffOr8+gI1G/553B+L0moub3wQcWOWK97y7bkhitN3tmHVdMwCrnD15d9yETZHv63wM
        O75mgI3cNj9O5+CcxfEEeODMeJsgOELHgHvtAD8yeR+jY2Cu5PgC3Dkr3p0mB2G5Rrfj3Ok1BGxk8n5P
        t6CM5ngDLOfEu8vEICRjdDruXV5LwEZHx7vLZtMpIDPqdPy7vKaADdw238avg83DeQDaOjLeJgSu1iXg
        XlvAFybv9bqEIo3zArRzVLwrTwZulc+vwzmq/BoDNjJ5/6x6EKpxvoAWxPs5IQBgSkfE2+08uIbXGrAs
        i8mbeqrfMRFw4O14V91Iqgeguurnr+rrDljpnXhX3UCqb/wAhNsb76rhpg4XYUBZ3vP+yoZfS+Xz6QIa
        GtsT76qbRuWNHoBCTN5UV/mirOqFNPCCeP9WeYPH+QWK2RpvV/oAMJjJ21TWRdXz7IIaGhJvAAizJd4V
        r/CrTmMAFGbyppOqF2sVL6yBH4g3AIRZG++KV/ZVpzB+5rwD8bpO3jZwqql4gQ080THewo01AERbE29X
        9FQk4ECsjpM3VOVCG5roFm/TFvesByDSq3i7kgeAyXSavE1ZAJTQKd7wiIs6II54Qy3e6oIGxBsAwvwU
        70pX8G6N8hPrA4hi8gaAMOIN9VS6awY88CzeXvwAMKkOk7f3M1nDOgFidIg3dOTuGRQm3gAQpnq83Qpl
        C+sFiFA93gBQzqN4e68MACZm8gaAMOINAGHEG76q9KE1b4FBUZXjXWkThr0EHAr6Hm8vdACY3H28hRsA
        AlS+bQ4AJVWNt/e7eYf1A0ytarwBoCzxhvp8ngWKEW8ACHOLtytzAAhh8gaAML9GP4CTuJMAQFkmbwAI
        I94AEEa8ASCMeANAGPGGHnyIEwoRbwAII94AEOafxe00AIhi8gaAMOINAGHEGwDCiDcAhBFvAAgj3gAQ
        RrwBIIx4A0AY8QaAMOINAGHEGwDCiDcAhBFvAAgj3gAQRrwBIIx4A0AY8QaAMOINAGHEGwDCiDcAhBFv
        AAgj3gAQRrwBIIx4A0AY8QaAMOINAGHEGwDCiDcAhBFvAAgj3gAQ5tfoB3CCj9EPAADOZPIGgDDiDQBh
        xBsAwog3AIQRbwAI88/i09kAEMXkDQBhKsb7c/QDAIAzVYw3AJQm3gAQRrwBIIx4A0AY8QaAMOINAGHE
        GwDC3OLtW9YAIETVydsXtQBQVtV4A0BZ4g0AYcQbAMJUjrf3vQEo6T7ePnEOAAG+T94CDgCTq3zbHABK
        qh5v73sDUE71eANAOeINAGEexduH1gBgYiZvAAjTId4+tAZAKR3iDQCliDcAhBFvAAjzLN7VPnHufW8A
        yjB5A0CYTvE2fQNQwk/xrnbrHABK6DR5L4vpG4ACfo1+ADCZChd47ppBcd0mb/hJhXAvS53nATzRMd42
        NgCivYp31dtvAg5ArI6TN1RX9aIb+FfneJu+AYi0Jt6u4gFgIp0n72UxfQMQqHu84caFHBBjbbwr3zq3
        aVNJ5dcq8C+TNwCEEe/fTN8AxNgSb7fjAGACJu8/TN99OfdAFPEGgDBb41391rkJjGTVX5/Av0zefxPw
        XpxvII54A0CYPfHucGvONNaD8wxEMnk/Z2MnSYeLauBfe+NtoyCdizMg1juTd4eA2+Brcl6BaO/eNhdw
        0lQ8nx1eh8Ad73mvU3HDByDUEfHuctUv4PmcQ6AEkzcAhBHvbUxuuaqeuy53voA7R8W70wZSNQKVOWdA
        KSbvfcQgR+Vz1emiGbhzZLy7bSSVo1CFcwSUdPTkLeDMwrkBynLb/H0iMZ8O56TbhTJw54x4d9xUOsQi
        hXMBlGfyPo5ojNflHHS8QAbunBXvrpvL59InILPpcty7vraAO2dO3p03mS4hmUGnC6bOryngjtvm5+kS
        lJEcY6Cls+PdfVLoNBVezXEF2jJ5X0NojtP1gqj7hTBw54p423R+6xqdozh+AP+6avIW8D8EaLvux8zr
        B/jiytvmNqA/TJHrOE5eN8ADvy7+eR+Lzfje/bGwSf9mfQC8cHW8l0XAn+kccuvhsW7rAFhpRLyXRcBf
        uR2bypu38/+zyuceeNOoeLNOxWlctAHeNDLepu9tvh+rhJg7v/sknFtgoNGTt4DvN2PMncv3zXAegcn5
        hrU6Rodz9M8HaGP05L0spu8jrTmOWyc75+Y6pm5glRnivSwCfiXHeU7CDaw2021zmxddWfvAJjPFe1ls
        YvRjzQObzRbvZbGZ0Ye1DuwyY7yX5femZmOjMusb2G3WeN/Y4KjIugbeMnu8l8VGRy3WM/C2hHgviw2P
        Gqxj4BAp8V4WGx/ZrF/gMEnxhlTCDRwqLd42QQDaS4v3sgg4WaxX4HCzfLf5VrcN0fd0MyvRBk6TOHnf
        s0EyG18wBJwuPd7LYrNkHtYhcIkK8b6xcTKS9QdcplK8l8UGyvXc+QEuVy3ey2Iz5TrWGTBExXjfiDhn
        sraAYSrH+8Ymy5FcFALDpf6e91Z+L5x3CTYwjQ6T9z0bMHtYN8BUusV7WWzErOcWOTCljvFeFpsyr1kf
        wLS6vOf9jPfC+U60gel1j/eNiCPaQAzx/krE+xFtII54P3a/oQt5PYINRBPv14S8BsEGyhDvbdxWzyPa
        QDnivY9pfG6CDZQm3u8T8vHEGmhFvI/1PSJifh7BBtrq+g1rVxGYcziuQGsm7/OZxt8n1gB3xPt6j0Ik
        6H8INcAL4j2HrkEXaoAdxHtea8I2e+DFGeAE/wfAYtBG9SVKjAAAAABJRU5ErkJggg==
</value>
  </data>
</root>