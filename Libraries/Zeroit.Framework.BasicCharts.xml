<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zeroit.Framework.BasicCharts</name>
    </assembly>
    <members>
        <member name="T:Zeroit.Framework.BasicCharts.Bootstrap">
            <summary>
            Class Bootstrap.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Bootstrap.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Bootstrap.OrientBackground">
            <summary>
            Gets or sets the orient background.
            </summary>
            <value>The orient background.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Bootstrap.GridColors">
            <summary>
            Gets or sets the grid colors.
            </summary>
            <value>The grid colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Bootstrap.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Bootstrap.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Material">
            <summary>
            Class Material.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Material.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Material.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChartDesigner">
            <summary>
            Class ZeroitBarChartDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChartDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChartDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList">
            <summary>
            Class ZeroitBarChartSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.DesignerActionUIService">
            <summary>
            Gets the designer action UI service.
            </summary>
            <value>The designer action UI service.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.HatchBrush">
            <summary>
            Gets or sets the hatch brush.
            </summary>
            <value>The hatch brush.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.FilledGradient">
            <summary>
            Gets or sets the filled gradient.
            </summary>
            <value>The filled gradient.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.FilledColor">
            <summary>
            Gets or sets the color of the filled.
            </summary>
            <value>The color of the filled.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.SplitterColor">
            <summary>
            Gets or sets the color of the splitter.
            </summary>
            <value>The color of the splitter.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.UnfilledColor">
            <summary>
            Gets or sets the color of the unfilled.
            </summary>
            <value>The color of the unfilled.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.HatchStyle">
            <summary>
            Gets or sets the hatch style.
            </summary>
            <value>The hatch style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.GradientMode">
            <summary>
            Gets or sets the gradient mode.
            </summary>
            <value>The gradient mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.DrawMode">
            <summary>
            Gets or sets the draw mode.
            </summary>
            <value>The draw mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.GraphOrientation">
            <summary>
            Gets or sets the graph orientation.
            </summary>
            <value>The graph orientation.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.GraphStyle">
            <summary>
            Gets or sets the graph style.
            </summary>
            <value>The graph style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.GridSize">
            <summary>
            Gets or sets the size of the grid.
            </summary>
            <value>The size of the grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.Sorting">
            <summary>
            Gets or sets the sorting.
            </summary>
            <value>The sorting.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.ShowGrid">
            <summary>
            Gets or sets a value indicating whether [show grid].
            </summary>
            <value><c>true</c> if [show grid]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.MaterialColor">
            <summary>
            Gets or sets the color of the material.
            </summary>
            <value>The color of the material.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.MaterialBackground">
            <summary>
            Gets or sets the material background.
            </summary>
            <value>The material background.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.BootstrapBackground">
            <summary>
            Gets or sets the bootstrap background.
            </summary>
            <value>The bootstrap background.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.BootstrapOrientedColor">
            <summary>
            Gets or sets the color of the bootstrap oriented.
            </summary>
            <value>The color of the bootstrap oriented.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.BootstrapGridColor">
            <summary>
            Gets or sets the color of the bootstrap grid.
            </summary>
            <value>The color of the bootstrap grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.BootstrapTextColor">
            <summary>
            Gets or sets the color of the bootstrap text.
            </summary>
            <value>The color of the bootstrap text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.BootstrapBorderWidth">
            <summary>
            Gets or sets the width of the bootstrap border.
            </summary>
            <value>The width of the bootstrap border.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.RefreshComponent">
            <summary>
            Refreshes the component.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.ShowGridLines">
            <summary>
            Shows the grid lines.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChartSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.AboutDialog">
            <summary>
            Class AboutDialog.
            </summary>
            <seealso cref="T:System.Windows.Forms.Form" />
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.AboutDialog.WebsiteLink">
            <summary>
            Gets or sets the website link.
            </summary>
            <value>The website link.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.AboutDialog.FacebookLink">
            <summary>
            Gets or sets the facebook link.
            </summary>
            <value>The facebook link.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.AboutDialog.GitHubLink">
            <summary>
            Gets or sets the git hub link.
            </summary>
            <value>The git hub link.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.AboutDialog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.AboutDialog"/> class.
            </summary>
            <param name="appName">Name of the application.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.AboutDialog.IconClick(System.Object,System.EventArgs)">
            <summary>
            Icons the click.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.AboutDialog.AboutDialog_Shown(System.Object,System.EventArgs)">
            <summary>
            Handles the Shown event of the AboutDialog control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.AboutDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.AboutDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.AboutDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.AboutDialog.flowLayoutPanel1">
            <summary>
            The flow layout panel1
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.AboutDialog.bloggerIcon">
            <summary>
            The blogger icon
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.AboutDialog.facebookIcon">
            <summary>
            The facebook icon
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.AboutDialog.btOK">
            <summary>
            The bt ok
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.AboutDialog.lbVersion">
            <summary>
            The lb version
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.AboutDialog.githubIcon">
            <summary>
            The github icon
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.WindowMessagesNativeMethods">
            <summary>
            Class WindowMessagesNativeMethods.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.WindowMessagesNativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the message.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="wMsg">The w MSG.</param>
            <param name="wParam">The w parameter.</param>
            <param name="lParam">The l parameter.</param>
            <returns>IntPtr.</returns>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.WindowMessagesNativeMethods.WM_SETREDRAW">
            <summary>
            The wm setredraw
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.WindowMessagesNativeMethods.SuspendDrawing(System.Windows.Forms.Control)">
            <summary>
            Suspends the drawing.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.WindowMessagesNativeMethods.ResumeDrawing(System.Windows.Forms.Control)">
            <summary>
            Resumes the drawing.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.CursorPositionChanged">
            <summary>
            Chart callback function when cursor position changed.
            </summary>
            <param name="sender">Chart object</param>
            <param name="cursor">Chart cursor</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZoomChanged">
            <summary>
            Form of the callback when the user has zoomed the chart.
            </summary>
            <param name="sender">Chart Object</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.MSChartExtensionToolState">
            <summary>
            MSChart Control Extension's States
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.Unknown">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.Select">
            <summary>
            Point Select Mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.Select2">
            <summary>
            Point Select Mode - Second Cursor
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.Zoom">
            <summary>
            Zoom
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.ZoomX">
            <summary>
            Zoom only along the X axis.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.ZoomY">
            <summary>
            Zoom only along the Y axis.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.ZoomDialog">
            <summary>
            Configure Zoom region from pop up dialog
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionToolState.Pan">
            <summary>
            Pan
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ChartCursor">
            <summary>
            Chart Cursor Position 
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartCursor.X">
            <summary>
            X Value based on primary Axis
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartCursor.Y">
            <summary>
            Y Value based on primary Axis
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartCursor.ChartArea">
            <summary>
            ChartArea where the cursor is located.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ChartCursor.Clone">
            <summary>
            Clone object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ChartData">
            <summary>
            Data Storage class for <see cref="T:Zeroit.Framework.BasicCharts.MSChartExtension"/>
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ChartData.Backup">
            <summary>
            Backtup properties for all Chart Area
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ChartData.Restore">
            <summary>
            Restore properties for all Chart Area
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ChartOption">
            <summary>
            Configuration options for <see cref="T:Zeroit.Framework.BasicCharts.MSChartExtension"/> 
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.ContextMenuAllowToHideSeries">
            <summary>
            Enable / Disable controls in ContextMenu to show / hide series
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.XAxisPrecision">
            <summary>
            Round value on XAxis to number of decimal place
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.YAxisPrecision">
            <summary>
            Round value on YAxis to number of decimal place
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.Cursor1Color">
            <summary>
            Cursor 1 Color, default is <see cref="P:System.Drawing.Color.Red"/> 
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.Cursor2Color">
            <summary>
            Cursor 2 Color, default is <see cref="P:System.Drawing.Color.DarkGreen"/> 
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.Cursor1DashStyle">
            <summary>
            Cursor 1 Dash Style, default is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle.Solid"/> 
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.Cursor2DashStyle">
            <summary>
            Cursor 2 Dash Style, default is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle.Solid"/> 
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.Cursor1LineWidth">
            <summary>
            Cursor 1 Line Width, default = 1
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartOption.Cursor2LineWidth">
            <summary>
            Cursor 2 Line Width, default = 1
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.MSChartExtension">
            <summary>
            Extension class for MSChart
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.EnableZoomAndPanControls(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Enable Zoom and Pan Controls.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.EnableZoomAndPanControls(System.Windows.Forms.DataVisualization.Charting.Chart,Zeroit.Framework.BasicCharts.CursorPositionChanged,Zeroit.Framework.BasicCharts.CursorPositionChanged,Zeroit.Framework.BasicCharts.ZoomChanged,Zeroit.Framework.BasicCharts.ChartOption)">
            <summary>
            Enable Zoom and Pan Controls.
            </summary>
            <param name="sender">The sender.</param>
            <param name="selectionChanged">Selection changed callabck. Triggered when user select a point with selec tool.</param>
            <param name="cursorMoved">Cursor moved callabck. Triggered when user move the mouse in chart area.</param>
            <param name="zoomChanged">Callback triggered when chart has 
            zoomed in or out (and on first painting of the chart).</param>
            <param name="option">Additional user options</param>
            <remarks>
            <para>Callback are optional (pass in null to ignore).</para>
            <para>WARNING: Add or Remove Chart Area or Chart Series after enabled zoom and pan controls may cause unexpected behavior.</para>
            <para>Recommended to enable the zoom and pan controls after configure the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea"/> and <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series"/>.</para>
            </remarks>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.DisableZoomAndPanControls(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Disable Zoom and Pan Controls
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.GetChartToolState(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Get current control state.
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.Cursor1(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Return Cursor 1 Object
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.Cursor2(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Return Cursor 2 Object
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.CursorsDiff(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Calculate different between Cursor2 and Cursor1 where result = Cursor2 - Cursor1.
            Return 0 if either cursor is not valid.
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.ClearPoints(System.Windows.Forms.DataVisualization.Charting.Series)">
            <summary>
            Speed up MSChart data points clear operations.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.DrawHorizontalLine(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle,System.Windows.Forms.DataVisualization.Charting.ChartArea)">
            <summary>
            Draw a horizontal line on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="y">YAxis value.</param>
            <param name="lineColor">Line color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
            <param name="chartArea">Target ChartArea where annotation should be displayed. Default to first ChartArea if not defined.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.DrawVerticalLine(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle,System.Windows.Forms.DataVisualization.Charting.ChartArea)">
            <summary>
            Draw a vertical line on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="x">XAxis value.</param>
            <param name="lineColor">Line color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
            <param name="chartArea">Target ChartArea where annotation should be displayed. Default to first ChartArea if not defined.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.DrawRectangle(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle,System.Windows.Forms.DataVisualization.Charting.ChartArea)">
            <summary>
            Draw a rectangle on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="x">XAxis value</param>
            <param name="y">YAxis value</param>
            <param name="width">rectangle width using XAis value.</param>
            <param name="height">rectangle height using YAis value.</param>
            <param name="lineColor">Outline color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
            <param name="chartArea">Target ChartArea where annotation should be displayed. Default to first ChartArea if not defined.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.DrawLine(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle,System.Windows.Forms.DataVisualization.Charting.ChartArea)">
            <summary>
            Draw a line on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="x0">First point on XAxis.</param>
            <param name="x1">Second piont on XAxis.</param>
            <param name="y0">First point on YAxis.</param>
            <param name="y1">Second point on YAxis.</param>
            <param name="lineColor">Outline color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
            <param name="chartArea">Target ChartArea where annotation should be displayed. Default to first ChartArea if not defined.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.AddText(System.Windows.Forms.DataVisualization.Charting.Chart,System.String,System.Double,System.Double,System.Drawing.Color,System.String,System.Windows.Forms.DataVisualization.Charting.TextStyle,System.Windows.Forms.DataVisualization.Charting.ChartArea)">
            <summary>
            Add text annotation to chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="text">Text to display.</param>
            <param name="x">Text box upper left X Coordinate.</param>
            <param name="y">Text box upper left Y coordinate.</param>
            <param name="textColor">Text color.</param>
            <param name="name">Annotation name.</param>
            <param name="textStyle">Style of text.</param>
            <param name="chartArea">Target ChartArea where annotation should be displayed. Default to first ChartArea if not defined.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.GetChartAreaBoundary(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Boolean)">
            <summary>
            Return the entire chart boundary
            </summary>
            <param name="sender"></param>
            <param name="primaryAxis"></param>
            <seealso cref="M:Zeroit.Framework.BasicCharts.MSChartExtension.GetChartVisibleAreaBoundary(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Boolean)"/>
            <returns></returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtension.GetChartVisibleAreaBoundary(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Boolean)">
            <summary>
            Return chart boundary for visible area.
            </summary>
            <param name="sender"></param>
            <param name="primaryAxis"></param>
            <seealso cref="M:Zeroit.Framework.BasicCharts.MSChartExtension.GetChartAreaBoundary(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Boolean)"/>
            <returns></returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Extensions">
            <summary>
            This is a set of extensions for accessing the Event Handlers as well as cloning menu items
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Extensions.menuNameCounter">
            <summary>
            This contains a counter to help make names unique
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Extensions.Clone(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            Clones the specified source tool strip menu item.
            </summary>
            <param name="sourceToolStripMenuItem">The source tool strip menu item.</param>
            <returns>A cloned version of the toolstrip menu item</returns>
            <exception cref="T:System.NotImplementedException">Menu item is not a ToolStripMenuItem or a ToolStripSeparatorr</exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Extensions.AddHandlers``1(``0,``0)">
            <summary>
            Adds the handlers from the source component to the destination component
            </summary>
            <typeparam name="T">An IComponent type</typeparam>
            <param name="destinationComponent">The destination component.</param>
            <param name="sourceComponent">The source component.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Extensions.GetEventHandlerList(System.ComponentModel.IComponent)">
            <summary>
            Gets the event handler list from a component
            </summary>
            <param name="component">The source component.</param>
            <returns>The EventHanderList or null if none</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.SplineAxis">
            <summary>
            Class SplineAxis.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SplineAxis.NumberColors">
            <summary>
            Gets or sets the number colors.
            </summary>
            <value>The number colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SplineAxis.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SplineAxis.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SplineAxis.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.SplineMaterialColors">
            <summary>
            Class SplineMaterialColors.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SplineMaterialColors.fillColor">
            <summary>
            The fill color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SplineMaterialColors.backColor">
            <summary>
            The back color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SplineMaterialColors.gradientAngle">
            <summary>
            The gradient angle
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SplineMaterialColors.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SplineMaterialColors.GradientAngle">
            <summary>
            Gets or sets the gradient angle.
            </summary>
            <value>The gradient angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SplineMaterialColors.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraphDesigner">
            <summary>
            Class ZeroitSplineGraphDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraphDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraphDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList">
            <summary>
            Class ZeroitSplineGraphSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.DesignerActionUIService">
            <summary>
            Gets the designer action UI service.
            </summary>
            <value>The designer action UI service.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.GraphStyle">
            <summary>
            Gets or sets the graph style.
            </summary>
            <value>The graph style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.GraphTitle">
            <summary>
            Gets or sets the graph title.
            </summary>
            <value>The graph title.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.GraphTitleColor">
            <summary>
            Gets or sets the color of the graph title.
            </summary>
            <value>The color of the graph title.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.PointSize">
            <summary>
            Gets or sets the size of the point.
            </summary>
            <value>The size of the point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ShowBorder">
            <summary>
            Gets or sets a value indicating whether [show border].
            </summary>
            <value><c>true</c> if [show border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ShowPoints">
            <summary>
            Gets or sets a value indicating whether [show points].
            </summary>
            <value><c>true</c> if [show points]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ShowTitle">
            <summary>
            Gets or sets a value indicating whether [show title].
            </summary>
            <value><c>true</c> if [show title]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ShowVerticalLines">
            <summary>
            Gets or sets a value indicating whether [show vertical lines].
            </summary>
            <value><c>true</c> if [show vertical lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.TitleAlignment">
            <summary>
            Gets or sets the title alignment.
            </summary>
            <value>The title alignment.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.VerticalLineColor">
            <summary>
            Gets or sets the color of the vertical line.
            </summary>
            <value>The color of the vertical line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.MaterialColors">
            <summary>
            Gets or sets the material colors.
            </summary>
            <value>The material colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.MaterialColorAngle">
            <summary>
            Gets or sets the material color angle.
            </summary>
            <value>The material color angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.SeedColors">
            <summary>
            Gets or sets the seed colors.
            </summary>
            <value>The seed colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.RandomizeColors">
            <summary>
            Gets or sets a value indicating whether [randomize colors].
            </summary>
            <value><c>true</c> if [randomize colors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.TimerMode">
            <summary>
            Gets or sets the timer mode.
            </summary>
            <value>The timer mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.HorizGridPenColor">
            <summary>
            Gets or sets the color of the horiz grid pen.
            </summary>
            <value>The color of the horiz grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.VertGridPenColor">
            <summary>
            Gets or sets the color of the vert grid pen.
            </summary>
            <value>The color of the vert grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ChartStyleBackColorBottom">
            <summary>
            Gets or sets the chart style back color bottom.
            </summary>
            <value>The chart style back color bottom.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ChartStyleBackColorTop">
            <summary>
            Gets or sets the chart style back color top.
            </summary>
            <value>The chart style back color top.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ShowHorizontalGridLines">
            <summary>
            Gets or sets a value indicating whether [show horizontal grid lines].
            </summary>
            <value><c>true</c> if [show horizontal grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ShowVerticalGridLines">
            <summary>
            Gets or sets a value indicating whether [show vertical grid lines].
            </summary>
            <value><c>true</c> if [show vertical grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.RefreshComponent">
            <summary>
            Refreshes the component.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.ShowTitleText">
            <summary>
            Shows the title text.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraphSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraph">
            <summary>
            Class ZeroitSplineGraph.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <seealso cref="T:System.Runtime.Serialization.ISerializable" />
            <summary>
            Class ZeroitSplineGraph.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <seealso cref="T:System.Runtime.Serialization.ISerializable" />
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle">
            <summary>
            Enum Border3DStyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.Adjust">
            <summary>
            The adjust
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.Bump">
            <summary>
            The bump
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.Etched">
            <summary>
            The etched
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.Flat">
            <summary>
            The flat
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.Raised">
            <summary>
            The raised
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.RaisedInner">
            <summary>
            The raised inner
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.RaisedOuter">
            <summary>
            The raised outer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.Sunken">
            <summary>
            The sunken
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.SunkenInner">
            <summary>
            The sunken inner
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.SunkenOuter">
            <summary>
            The sunken outer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Border3DStyle.Single">
            <summary>
            The single
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.MAX_VALUE_COUNT">
            <summary>
            The maximum value count
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.GRID_SPACING">
            <summary>
            The grid spacing
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.visibleValues">
            <summary>
            The visible values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.valueSpacing">
            <summary>
            The value spacing
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.currentMaxValue">
            <summary>
            The current maximum value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.gridScrollOffset">
            <summary>
            The grid scroll offset
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.averageValue">
            <summary>
            The average value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.b3dstyle">
            <summary>
            The b3dstyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.scaleMode">
            <summary>
            The scale mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.timerMode">
            <summary>
            The timer mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.drawValues">
            <summary>
            The draw values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.waitingValues">
            <summary>
            The waiting values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.perfChartStyle">
            <summary>
            The perf chart style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.PerfChartStyle">
            <summary>
            Gets or sets the perf chart style.
            </summary>
            <value>The perf chart style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ScaleMode">
            <summary>
            Gets or sets the scale mode.
            </summary>
            <value>The scale mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.TimerMode">
            <summary>
            Gets or sets the timer mode.
            </summary>
            <value>The timer mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">TimerInterval - The Timer interval must be greater then 15</exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Clear">
            <summary>
            Clears the whole chart
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.AddValue(System.Decimal)">
            <summary>
            Adds a value to the Chart Line
            </summary>
            <param name="value">progress value</param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.AddValueToQueue(System.Decimal)">
            <summary>
            Add value to the queue for a timed refresh
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ChartAppend(System.Decimal)">
            <summary>
            Appends value <paramref name="value" /> to the chart (without redrawing)
            </summary>
            <param name="value">performance value</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ChartAppendFromQueue">
            <summary>
            Appends Items from queue
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.CalcVerticalPosition(System.Decimal)">
            <summary>
            Calculates the vertical Position of a value in relation the chart size,
            Scale Mode and, if ScaleMode is Relative, to the current maximum value
            </summary>
            <param name="value">performance value</param>
            <returns>vertical Point position in Pixels</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.GetHighestValueForRelativeMode">
            <summary>
            Returns the currently highest (displayed) value, for Relative ScaleMode
            </summary>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.DrawChart(System.Drawing.Graphics)">
            <summary>
            Draws the chart (w/o background or grid, but with border) to the Graphics canvas
            </summary>
            <param name="g">Graphics</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.DrawAverageLine(System.Drawing.Graphics)">
            <summary>
            Draws the average line.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.DrawBackgroundAndGrid(System.Drawing.Graphics)">
            <summary>
            Draws the background gradient and the grid into Graphics <paramref name="g" />
            </summary>
            <param name="g">Graphic</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.PerformanceOnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Performances the on paint.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
            Override OnPaint method
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.colorSet_ColorSetChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ColorSetChanged event of the colorSet control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.tmrRefresh_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the tmrRefresh control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.InitializeComponent">
            <summary>
            Erforderliche Methode f�r die Designerunterst�tzung.
            Der Inhalt der Methode darf nicht mit dem Code-Editor ge�ndert werden.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.tmrRefresh">
            <summary>
            The TMR refresh
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Style">
            <summary>
            Enum Style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Style.Flat">
            <summary>
            The flat
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Style.Material">
            <summary>
            The material
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Style.Curved">
            <summary>
            The curved
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.items">
            <summary>
            The items
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.showVerticalLines">
            <summary>
            The show vertical lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.showBorder">
            <summary>
            The show border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.showTitle">
            <summary>
            The show title
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.showPoints">
            <summary>
            The show points
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.titleAlignment">
            <summary>
            The title alignment
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.pointSize">
            <summary>
            The point size
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.borderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.lineColor">
            <summary>
            The line color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.verticalLineColor">
            <summary>
            The vertical line color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.graphTitleColor">
            <summary>
            The graph title color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.graphTitle">
            <summary>
            The graph title
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.graphStyle">
            <summary>
            The graph style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.material">
            <summary>
            The material
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.randomizeColors">
            <summary>
            The randomize colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.splineAxis">
            <summary>
            The spline axis
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.showAxis">
            <summary>
            The show axis
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.pointColor">
            <summary>
            The point color
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.BrushType">
            <summary>
            Enum BrushType
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.BrushType.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.BrushType.Gradient">
            <summary>
            The gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.BrushType.Hatch">
            <summary>
            The hatch
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.SeedColor">
            <summary>
            Enum SeedColor
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.SeedColor.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.SeedColor.FirstColor">
            <summary>
            The first color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.SeedColor.SecondColor">
            <summary>
            The second color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.SeedColor.Both">
            <summary>
            The both
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.seedColors">
            <summary>
            The seed colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.colors">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.brushType">
            <summary>
            The brush type
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.hatchStyle">
            <summary>
            The hatch style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.HatchStyle">
            <summary>
            Gets or sets the hatch style.
            </summary>
            <value>The hatch style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Brush">
            <summary>
            Gets or sets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.SeedColors">
            <summary>
            Gets or sets the seed colors.
            </summary>
            <value>The seed colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.PointColor">
            <summary>
            Gets or sets the color of the point.
            </summary>
            <value>The color of the point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ShowAxis">
            <summary>
            Gets or sets a value indicating whether [show axis].
            </summary>
            <value><c>true</c> if [show axis]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.RandomizeColors">
            <summary>
            Gets or sets a value indicating whether [randomize colors].
            </summary>
            <value><c>true</c> if [randomize colors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.GraphStyle">
            <summary>
            Gets or sets the graph style.
            </summary>
            <value>The graph style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.GraphTitle">
            <summary>
            Gets or sets the graph title.
            </summary>
            <value>The graph title.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.GraphTitleColor">
            <summary>
            Gets or sets the color of the graph title.
            </summary>
            <value>The color of the graph title.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.PointSize">
            <summary>
            Gets or sets the size of the point.
            </summary>
            <value>The size of the point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ShowBorder">
            <summary>
            Gets or sets a value indicating whether [show border].
            </summary>
            <value><c>true</c> if [show border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ShowPoints">
            <summary>
            Gets or sets a value indicating whether [show points].
            </summary>
            <value><c>true</c> if [show points]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ShowTitle">
            <summary>
            Gets or sets a value indicating whether [show title].
            </summary>
            <value><c>true</c> if [show title]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.ShowVerticalLines">
            <summary>
            Gets or sets a value indicating whether [show vertical lines].
            </summary>
            <value><c>true</c> if [show vertical lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.TitleAlignment">
            <summary>
            Gets or sets the title alignment.
            </summary>
            <value>The title alignment.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.VerticalLineColor">
            <summary>
            Gets or sets the color of the vertical line.
            </summary>
            <value>The color of the vertical line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.Material">
            <summary>
            Gets or sets the material.
            </summary>
            <value>The material.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraph"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.GetPercent(System.Single,System.Single)">
            <summary>
            Gets the percent.
            </summary>
            <param name="number">The number.</param>
            <param name="maxNumber">The maximum number.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitSplineGraph"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSplineGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartDesigner">
            <summary>
            Class ZeroitPerformanceChartDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList">
            <summary>
            Class ZeroitPerformanceChartSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.DesignerActionUIService">
            <summary>
            Gets the designer action UI service.
            </summary>
            <value>The designer action UI service.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.AntiAliasing">
            <summary>
            Gets or sets a value indicating whether [anti aliasing].
            </summary>
            <value><c>true</c> if [anti aliasing]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ShowAverageLine">
            <summary>
            Gets or sets a value indicating whether [show average line].
            </summary>
            <value><c>true</c> if [show average line]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ShowHorizontalGridLines">
            <summary>
            Gets or sets a value indicating whether [show horizontal grid lines].
            </summary>
            <value><c>true</c> if [show horizontal grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ShowVerticalGridLines">
            <summary>
            Gets or sets a value indicating whether [show vertical grid lines].
            </summary>
            <value><c>true</c> if [show vertical grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ScaleMode">
            <summary>
            Gets or sets the scale mode.
            </summary>
            <value>The scale mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.TimerMode">
            <summary>
            Gets or sets the timer mode.
            </summary>
            <value>The timer mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ChartStyleBackColorBottom">
            <summary>
            Gets or sets the chart style back color bottom.
            </summary>
            <value>The chart style back color bottom.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ChartStyleBackColorTop">
            <summary>
            Gets or sets the chart style back color top.
            </summary>
            <value>The chart style back color top.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.AvgLinePenColor">
            <summary>
            Gets or sets the average color of the line pen.
            </summary>
            <value>The average color of the line pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.AvgLineDashStyle">
            <summary>
            Gets or sets the average line dash style.
            </summary>
            <value>The average line dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.AvgLinePenWidth">
            <summary>
            Gets or sets the average width of the line pen.
            </summary>
            <value>The average width of the line pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ChartLinePenColor">
            <summary>
            Gets or sets the color of the chart line pen.
            </summary>
            <value>The color of the chart line pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ChartLineDashStyle">
            <summary>
            Gets or sets the chart line dash style.
            </summary>
            <value>The chart line dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.ChartLinePenWidth">
            <summary>
            Gets or sets the width of the chart line pen.
            </summary>
            <value>The width of the chart line pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.HorizGridPenColor">
            <summary>
            Gets or sets the color of the horiz grid pen.
            </summary>
            <value>The color of the horiz grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.HorizGridPenDashStyle">
            <summary>
            Gets or sets the horiz grid pen dash style.
            </summary>
            <value>The horiz grid pen dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.HorizGridPenWidth">
            <summary>
            Gets or sets the width of the horiz grid pen.
            </summary>
            <value>The width of the horiz grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.VertGridPenColor">
            <summary>
            Gets or sets the color of the vert grid pen.
            </summary>
            <value>The color of the vert grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.VertGridPenDashStyle">
            <summary>
            Gets or sets the vert grid pen dash style.
            </summary>
            <value>The vert grid pen dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.VertGridPenWidth">
            <summary>
            Gets or sets the width of the vert grid pen.
            </summary>
            <value>The width of the vert grid pen.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.RefreshComponent">
            <summary>
            Refreshes the component.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChartSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignalDesigner">
            <summary>
            Class ZeroitSignalDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignalDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignalDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList">
            <summary>
            Class ZeroitSignalSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.DesignerActionUIService">
            <summary>
            Gets the designer action UI service.
            </summary>
            <value>The designer action UI service.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ShowMidGridLines">
            <summary>
            Gets or sets a value indicating whether [show mid grid lines].
            </summary>
            <value><c>true</c> if [show mid grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ShowText">
            <summary>
            Gets or sets a value indicating whether [show text].
            </summary>
            <value><c>true</c> if [show text]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ShowBorder">
            <summary>
            Gets or sets a value indicating whether [show border].
            </summary>
            <value><c>true</c> if [show border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.Multiplier">
            <summary>
            Gets or sets the multiplier.
            </summary>
            <value>The multiplier.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.Periods">
            <summary>
            Gets or sets the periods.
            </summary>
            <value>The periods.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.AmplitudeHeight">
            <summary>
            Gets or sets the height of the amplitude.
            </summary>
            <value>The height of the amplitude.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.AmplitudeTension">
            <summary>
            Gets or sets the amplitude tension.
            </summary>
            <value>The amplitude tension.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.GridLines">
            <summary>
            Gets or sets the grid lines.
            </summary>
            <value>The grid lines.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.SeedColors">
            <summary>
            Gets or sets the seed colors.
            </summary>
            <value>The seed colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.SignalType">
            <summary>
            Gets or sets the type of the signal.
            </summary>
            <value>The type of the signal.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.MidGridColor">
            <summary>
            Gets or sets the color of the mid grid.
            </summary>
            <value>The color of the mid grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.MidGridDashStyle">
            <summary>
            Gets or sets the mid grid dash style.
            </summary>
            <value>The mid grid dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.MidGridWidth">
            <summary>
            Gets or sets the width of the mid grid.
            </summary>
            <value>The width of the mid grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.SignalDashStyle">
            <summary>
            Gets or sets the signal dash style.
            </summary>
            <value>The signal dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.SignalWidth">
            <summary>
            Gets or sets the width of the signal.
            </summary>
            <value>The width of the signal.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.TimerMode">
            <summary>
            Gets or sets the timer mode.
            </summary>
            <value>The timer mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.HorizGridPenColor">
            <summary>
            Gets or sets the color of the horiz grid pen.
            </summary>
            <value>The color of the horiz grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.VertGridPenColor">
            <summary>
            Gets or sets the color of the vert grid pen.
            </summary>
            <value>The color of the vert grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ChartStyleBackColorBottom">
            <summary>
            Gets or sets the chart style back color bottom.
            </summary>
            <value>The chart style back color bottom.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ChartStyleBackColorTop">
            <summary>
            Gets or sets the chart style back color top.
            </summary>
            <value>The chart style back color top.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ShowHorizontalGridLines">
            <summary>
            Gets or sets a value indicating whether [show horizontal grid lines].
            </summary>
            <value><c>true</c> if [show horizontal grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.ShowVerticalGridLines">
            <summary>
            Gets or sets a value indicating whether [show vertical grid lines].
            </summary>
            <value><c>true</c> if [show vertical grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignalSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignal">
            <summary>
            Class ZeroitSignal.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <seealso cref="T:System.Runtime.Serialization.ISerializable" />
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal">
            <summary>
            Enum Signal
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.Linear">
            <summary>
            The sine
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.LinearDouble">
            <summary>
            The square
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.Sine">
            <summary>
            The sine
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.Square">
            <summary>
            The square
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.Triangle">
            <summary>
            The triangle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.Sawtooth">
            <summary>
            The sawtooth
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.Pulse">
            <summary>
            The pulse
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.WhiteNoise">
            <summary>
            The white noise
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.GaussNoise">
            <summary>
            The gauss noise
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.DigitalNoise">
            <summary>
            The digital noise
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Signal.UserDefined">
            <summary>
            The user defined
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignal.SeedColor">
            <summary>
            Enum SeedColor
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.SeedColor.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.SeedColor.FirstColor">
            <summary>
            The first color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.SeedColor.SecondColor">
            <summary>
            The second color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.SeedColor.Both">
            <summary>
            The both
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle">
            <summary>
            Enum Border3DStyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.Adjust">
            <summary>
            The adjust
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.Bump">
            <summary>
            The bump
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.Etched">
            <summary>
            The etched
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.Flat">
            <summary>
            The flat
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.Raised">
            <summary>
            The raised
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.RaisedInner">
            <summary>
            The raised inner
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.RaisedOuter">
            <summary>
            The raised outer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.Sunken">
            <summary>
            The sunken
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.SunkenInner">
            <summary>
            The sunken inner
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.SunkenOuter">
            <summary>
            The sunken outer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.Border3DStyle.Single">
            <summary>
            The single
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.initialLocation">
            <summary>
            The initial location
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.periods">
            <summary>
            The periods
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.amplitudeHeight">
            <summary>
            The amplitude height
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.amplitudeTension">
            <summary>
            The amplitude tension
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.gridLines">
            <summary>
            The grid lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.gridPen">
            <summary>
            The grid pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.signalPen">
            <summary>
            The signal pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.borderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.showMidGridLines">
            <summary>
            The show mid grid lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.showText">
            <summary>
            The show text
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.showBorder">
            <summary>
            The show border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.userrand">
            <summary>
            The userrand
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.textRendering">
            <summary>
            The text rendering
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.smoothing">
            <summary>
            The smoothing
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.random">
            <summary>
            Random provider for noise generator
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.colors">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.startTime">
            <summary>
            Time the signal generator was started
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.ticksPerSecond">
            <summary>
            Ticks per second on this CPU
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.seedColors">
            <summary>
            The seed colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.multiplier">
            <summary>
            The multiplier
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.items">
            <summary>
            The items
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.maximum">
            <summary>
            The maximum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.signalType">
            <summary>
            The signal type
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.frequency">
            <summary>
            The frequency
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.phase">
            <summary>
            The phase
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.amplitude">
            <summary>
            The amplitude
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.invert">
            <summary>
            The invert
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.getValueCallback">
            <summary>
            The get value callback
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.HorizGridPenColor">
            <summary>
            Gets or sets the color of the horiz grid pen.
            </summary>
            <value>The color of the horiz grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.VertGridPenColor">
            <summary>
            Gets or sets the color of the vert grid pen.
            </summary>
            <value>The color of the vert grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ChartStyleBackColorBottom">
            <summary>
            Gets or sets the chart style back color bottom.
            </summary>
            <value>The chart style back color bottom.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ChartStyleBackColorTop">
            <summary>
            Gets or sets the chart style back color top.
            </summary>
            <value>The chart style back color top.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ShowHorizontalGridLines">
            <summary>
            Gets or sets a value indicating whether [show horizontal grid lines].
            </summary>
            <value><c>true</c> if [show horizontal grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ShowVerticalGridLines">
            <summary>
            Gets or sets a value indicating whether [show vertical grid lines].
            </summary>
            <value><c>true</c> if [show vertical grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Smoothing">
            <summary>
            Gets or sets the smoothing.
            </summary>
            <value>The smoothing.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.TextRendering">
            <summary>
            Gets or sets the text rendering.
            </summary>
            <value>The text rendering.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ShowMidGridLines">
            <summary>
            Gets or sets a value indicating whether [show mid grid lines].
            </summary>
            <value><c>true</c> if [show mid grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ShowText">
            <summary>
            Gets or sets a value indicating whether [show text].
            </summary>
            <value><c>true</c> if [show text]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ShowBorder">
            <summary>
            Gets or sets a value indicating whether [show border].
            </summary>
            <value><c>true</c> if [show border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Multiplier">
            <summary>
            Gets or sets the multiplier.
            </summary>
            <value>The multiplier.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Periods">
            <summary>
            Gets or sets the periods.
            </summary>
            <value>The periods.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.AmplitudeHeight">
            <summary>
            Gets or sets the height of the amplitude.
            </summary>
            <value>The height of the amplitude.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.AmplitudeTension">
            <summary>
            Gets or sets the amplitude tension.
            </summary>
            <value>The amplitude tension.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.GridLines">
            <summary>
            Gets or sets the grid lines.
            </summary>
            <value>The grid lines.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.SeedColors">
            <summary>
            Gets or sets the seed colors.
            </summary>
            <value>The seed colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.SignalType">
            <summary>
            Signal Type.
            </summary>
            <value>The type of the signal.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.GridPen">
            <summary>
            Gets or sets the grid pen.
            </summary>
            <value>The grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.MidGridColor">
            <summary>
            Gets or sets the color of the mid grid.
            </summary>
            <value>The color of the mid grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.MidGridDashStyle">
            <summary>
            Gets or sets the mid grid dash style.
            </summary>
            <value>The mid grid dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.MidGridWidth">
            <summary>
            Gets or sets the width of the mid grid.
            </summary>
            <value>The width of the mid grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.SignalPen">
            <summary>
            Gets or sets the signal pen.
            </summary>
            <value>The signal pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.SignalDashStyle">
            <summary>
            Gets or sets the signal dash style.
            </summary>
            <value>The signal dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.SignalWidth">
            <summary>
            Gets or sets the width of the signal.
            </summary>
            <value>The width of the signal.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.BorderPen">
            <summary>
            Gets or sets the border pen.
            </summary>
            <value>The border pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignal.GetValueDelegate">
            <summary>
            Delegate GetValueDelegate
            </summary>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Frequency">
            <summary>
            Signal Frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Phase">
            <summary>
            Signal Phase.
            </summary>
            <value>The phase.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Amplitude">
            <summary>
            Signal Amplitude.
            </summary>
            <value>The amplitude.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Offset">
            <summary>
            Signal Offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Invert">
            <summary>
            Signal Inverted?
            </summary>
            <value><c>true</c> if invert; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.GetValueCallback">
            <summary>
            GetValue Callback?
            </summary>
            <value>The get value callback.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.InitialLocation">
            <summary>
            Gets or sets the initial location.
            </summary>
            <value>The initial location.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.GetSum">
            <summary>
            Gets the get sum.
            </summary>
            <value>The get sum.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ZeroitSignalGenerator" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.#ctor(Zeroit.Framework.BasicCharts.ZeroitSignal.Signal)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitSignal"/> class.
            </summary>
            <param name="initialSignalType">Initial type of the signal.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.Sum(System.Single[])">
            <summary>
            Sums the specified sum.
            </summary>
            <param name="sum">The sum.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.UserDefinedSignal(System.Single)">
            <summary>
            Users the defined signal.
            </summary>
            <param name="Time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.MagicDivision">
            <summary>
            Magics the division.
            </summary>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.GetValue(System.Single)">
            <summary>
            Gets the value.
            </summary>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.Synchronize(Zeroit.Framework.BasicCharts.ZeroitSignal)">
            <summary>
            Synchronizes the specified instance.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.CheckMaximum">
            <summary>
            Checks the maximum.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.PaintSignal(System.Drawing.Graphics,System.Drawing.Rectangle,Zeroit.Framework.BasicCharts.ZeroitSignal.Signal,System.Drawing.Color)">
            <summary>
            Paints the signal.
            </summary>
            <param name="g">The g.</param>
            <param name="r">The r.</param>
            <param name="st">The st.</param>
            <param name="c">The c.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.MAX_VALUE_COUNT">
            <summary>
            The maximum value count
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.GRID_SPACING">
            <summary>
            The grid spacing
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.visibleValues">
            <summary>
            The visible values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.valueSpacing">
            <summary>
            The value spacing
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.currentMaxValue">
            <summary>
            The current maximum value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.gridScrollOffset">
            <summary>
            The grid scroll offset
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.averageValue">
            <summary>
            The average value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.b3dstyle">
            <summary>
            The b3dstyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.scaleMode">
            <summary>
            The scale mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.timerMode">
            <summary>
            The timer mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.drawValues">
            <summary>
            The draw values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.waitingValues">
            <summary>
            The waiting values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.perfChartStyle">
            <summary>
            The perf chart style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.PerfChartStyle">
            <summary>
            Gets or sets the perf chart style.
            </summary>
            <value>The perf chart style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.ScaleMode">
            <summary>
            Gets or sets the scale mode.
            </summary>
            <value>The scale mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.TimerMode">
            <summary>
            Gets or sets the timer mode.
            </summary>
            <value>The timer mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">TimerInterval - The Timer interval must be greater then 15</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.Clear">
            <summary>
            Clears the whole chart
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.AddValue(System.Decimal)">
            <summary>
            Adds a value to the Chart Line
            </summary>
            <param name="value">progress value</param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.AddValueToQueue(System.Decimal)">
            <summary>
            Add value to the queue for a timed refresh
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.ChartAppend(System.Decimal)">
            <summary>
            Appends value <paramref name="value" /> to the chart (without redrawing)
            </summary>
            <param name="value">performance value</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.ChartAppendFromQueue">
            <summary>
            Appends Values from queue
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.CalcVerticalPosition(System.Decimal)">
            <summary>
            Calculates the vertical Position of a value in relation the chart size,
            Scale Mode and, if ScaleMode is Relative, to the current maximum value
            </summary>
            <param name="value">performance value</param>
            <returns>vertical Point position in Pixels</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.GetHighestValueForRelativeMode">
            <summary>
            Returns the currently highest (displayed) value, for Relative ScaleMode
            </summary>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.DrawChart(System.Drawing.Graphics)">
            <summary>
            Draws the chart (w/o background or grid, but with border) to the Graphics canvas
            </summary>
            <param name="g">Graphics</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.DrawAverageLine(System.Drawing.Graphics)">
            <summary>
            Draws the average line.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.DrawBackgroundAndGrid(System.Drawing.Graphics)">
            <summary>
            Draws the background gradient and the grid into Graphics <paramref name="g" />
            </summary>
            <param name="g">Graphic</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.PerformanceOnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Performances the on paint.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
            Override OnPaint method
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.colorSet_ColorSetChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ColorSetChanged event of the colorSet control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.tmrRefresh_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the tmrRefresh control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.InitializeComponent">
            <summary>
            Erforderliche Methode für die Designerunterstützung.
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.tmrRefresh">
            <summary>
            The TMR refresh
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.autoAnimate">
            <summary>
            The automatic animate
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.timerDecrement">
            <summary>
            The timer decrement
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.locationAnimator">
            <summary>
            The location animator
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.speed">
            <summary>
            The speed
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.dashOffset">
            <summary>
            The dash offset
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.AutoAnimate">
            <summary>
            Gets or sets a value indicating whether [automatic animate].
            </summary>
            <value><c>true</c> if [automatic animate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>The speed.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.SpeedMultiplier">
            <summary>
            Gets or sets the speed multiplier.
            </summary>
            <value>The speed multiplier.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the Timer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.TimerDecrement_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the TimerDecrement control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.IncludeInConstructor">
            <summary>
            Includes the in constructor.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitSignal.BrushType">
            <summary>
            Enum BrushType
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.BrushType.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.BrushType.Gradient">
            <summary>
            The gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.BrushType.Hatch">
            <summary>
            The hatch
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.brushType">
            <summary>
            The brush type
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.hatchStyle">
            <summary>
            The hatch style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.HatchStyle">
            <summary>
            Gets or sets the hatch style.
            </summary>
            <value>The hatch style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.Brush">
            <summary>
            Gets or sets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.enableHatchAnimation">
            <summary>
            The enable hatch animation
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.HatchAnimation">
            <summary>
            Gets or sets a value indicating whether [hatch animation].
            </summary>
            <value><c>true</c> if [hatch animation]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitSignal.HatchSpeed">
            <summary>
            Gets or sets the hatch speed.
            </summary>
            <value>The hatch speed.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.reactorOFS">
            <summary>
            The reactor ofs
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitSignal.hatchSpeed">
            <summary>
            The hatch speed
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.ReactorCreateHandle">
            <summary>
            Reactors the create handle.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.CreateHandle">
            <summary>
            Creates a handle for the control.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.ReactorAnimate">
            <summary>
            Reactors the animate.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitSignal"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitSignal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.OriginalSignalGenerator">
            <summary>
            Class OriginalSignalGenerator.
            </summary>
            <seealso cref="T:System.ComponentModel.Component" />
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Control">
            <summary>
            Gets or sets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.signalType">
            <summary>
            The signal type
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.SignalType">
            <summary>
            Signal Type.
            </summary>
            <value>The type of the signal.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.frequency">
            <summary>
            The frequency
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Frequency">
            <summary>
            Signal Frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.phase">
            <summary>
            The phase
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Phase">
            <summary>
            Signal Phase.
            </summary>
            <value>The phase.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.amplitude">
            <summary>
            The amplitude
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Amplitude">
            <summary>
            Signal Amplitude.
            </summary>
            <value>The amplitude.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Offset">
            <summary>
            Signal Offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.invert">
            <summary>
            The invert
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Invert">
            <summary>
            Signal Inverted?
            </summary>
            <value><c>true</c> if invert; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.getValueCallback">
            <summary>
            The get value callback
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.GetValueCallback">
            <summary>
            GetValue Callback?
            </summary>
            <value>The get value callback.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.random">
            <summary>
            Random provider for noise generator
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.startTime">
            <summary>
            Time the signal generator was started
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.ticksPerSecond">
            <summary>
            Ticks per second on this CPU
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.GetValueDelegate">
            <summary>
            Delegate GetValueDelegate
            </summary>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.#ctor(Zeroit.Framework.BasicCharts.SignalType)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.OriginalSignalGenerator" /> class.
            </summary>
            <param name="initialSignalType">Initial type of the signal.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.OriginalSignalGenerator" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.GetValue(System.Single)">
            <summary>
            Gets the value.
            </summary>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.Synchronize(Zeroit.Framework.BasicCharts.OriginalSignalGenerator)">
            <summary>
            Synchronizes the specified instance.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.UserDefinedSignal(System.Single)">
            <summary>
            Users the defined signal.
            </summary>
            <param name="Time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.PaintSignal(System.Drawing.Graphics,System.Drawing.Rectangle,Zeroit.Framework.BasicCharts.SignalType,System.Drawing.Color)">
            <summary>
            Paints the signal.
            </summary>
            <param name="g">The g.</param>
            <param name="r">The r.</param>
            <param name="st">The st.</param>
            <param name="c">The c.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.OriginalSignalGenerator.ControlPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Controls the paint.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.SignalType">
            <summary>
            Enum SignalType
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.Linear">
            <summary>
            The sine
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.LinearDouble">
            <summary>
            The square
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.Sine">
            <summary>
            The sine
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.Square">
            <summary>
            The square
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.Triangle">
            <summary>
            The triangle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.Sawtooth">
            <summary>
            The sawtooth
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.Pulse">
            <summary>
            The pulse
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.WhiteNoise">
            <summary>
            The white noise
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.GaussNoise">
            <summary>
            The gauss noise
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.DigitalNoise">
            <summary>
            The digital noise
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalType.UserDefined">
            <summary>
            The user defined
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.StatisticFunction">
            <summary>
            Class StatisticFunction.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.StatisticFunction.Mean(System.Double[])">
            <summary>
            Means the specified values.
            </summary>
            <param name="values">The values.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.StatisticFunction.StandardDeviation(System.Double[])">
            <summary>
            Standards the deviation.
            </summary>
            <param name="values">The values.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.StatisticFunction.Variance(System.Double[])">
            <summary>
            Variances the specified values.
            </summary>
            <param name="values">The values.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.StatisticFunction.NORMSINV(System.Double)">
            <summary>
            Normsinvs the specified p.
            </summary>
            <param name="p">The p.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.StatisticFunction.NORMINV(System.Double,System.Double,System.Double)">
            <summary>
            Norminvs the specified probability.
            </summary>
            <param name="probability">The probability.</param>
            <param name="mean">The mean.</param>
            <param name="standard_deviation">The standard deviation.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.StatisticFunction.NORMINV(System.Double,System.Double[])">
            <summary>
            Norminvs the specified probability.
            </summary>
            <param name="probability">The probability.</param>
            <param name="values">The values.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.SignalGenerate">
            <summary>
            Class SignalGenerate.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.signalType">
            <summary>
            The signal type
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.SignalType">
            <summary>
            Signal Type.
            </summary>
            <value>The type of the signal.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.frequency">
            <summary>
            The frequency
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Frequency">
            <summary>
            Signal Frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.phase">
            <summary>
            The phase
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Phase">
            <summary>
            Signal Phase.
            </summary>
            <value>The phase.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.amplitude">
            <summary>
            The amplitude
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Amplitude">
            <summary>
            Signal Amplitude.
            </summary>
            <value>The amplitude.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Offset">
            <summary>
            Signal Offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.invert">
            <summary>
            The invert
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Invert">
            <summary>
            Signal Inverted?
            </summary>
            <value><c>true</c> if invert; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.getValueCallback">
            <summary>
            The get value callback
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.GetValueCallback">
            <summary>
            GetValue Callback?
            </summary>
            <value>The get value callback.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.InitialLocation">
            <summary>
            Gets or sets the initial location.
            </summary>
            <value>The initial location.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Periods">
            <summary>
            Gets or sets the periods.
            </summary>
            <value>The periods.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.AmplitudeHeight">
            <summary>
            Gets or sets the height of the amplitude.
            </summary>
            <value>The height of the amplitude.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.AmplitudeTension">
            <summary>
            Gets or sets the amplitude tension.
            </summary>
            <value>The amplitude tension.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.GridLines">
            <summary>
            Gets or sets the grid lines.
            </summary>
            <value>The grid lines.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.GridPen">
            <summary>
            Gets or sets the grid pen.
            </summary>
            <value>The grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.SignalPen">
            <summary>
            Gets or sets the signal pen.
            </summary>
            <value>The signal pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether [show grid lines].
            </summary>
            <value><c>true</c> if [show grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.ShowText">
            <summary>
            Gets or sets a value indicating whether [show text].
            </summary>
            <value><c>true</c> if [show text]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.ShowBorder">
            <summary>
            Gets or sets a value indicating whether [show border].
            </summary>
            <value><c>true</c> if [show border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.random">
            <summary>
            Random provider for noise generator
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.startTime">
            <summary>
            Time the signal generator was started
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.ticksPerSecond">
            <summary>
            Ticks per second on this CPU
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.Sum(System.Single[])">
            <summary>
            Sums the specified sum.
            </summary>
            <param name="sum">The sum.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.GetSum">
            <summary>
            Gets the get sum.
            </summary>
            <value>The get sum.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.items">
            <summary>
            The items
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.maximum">
            <summary>
            The maximum
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.SignalGenerate.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.SignalGenerate.GetValueDelegate">
            <summary>
            Delegate GetValueDelegate
            </summary>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.OriginalSignalGenerator" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.#ctor(Zeroit.Framework.BasicCharts.SignalType)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.SignalGenerate"/> class.
            </summary>
            <param name="initialSignalType">Initial type of the signal.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.GetValue(System.Single)">
            <summary>
            Gets the value.
            </summary>
            <param name="time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.Synchronize(Zeroit.Framework.BasicCharts.SignalGenerate)">
            <summary>
            Synchronizes the specified instance.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.UserDefinedSignal(System.Single)">
            <summary>
            Users the defined signal.
            </summary>
            <param name="Time">The time.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.initialLocation">
            <summary>
            The initial location
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.periods">
            <summary>
            The periods
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.amplitudeHeight">
            <summary>
            The amplitude height
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.amplitudeTension">
            <summary>
            The amplitude tension
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.gridLines">
            <summary>
            The grid lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.gridPen">
            <summary>
            The grid pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.signalPen">
            <summary>
            The signal pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.borderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.showGridLines">
            <summary>
            The show grid lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.showText">
            <summary>
            The show text
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.SignalGenerate.showBorder">
            <summary>
            The show border
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.PaintSignal(System.Drawing.Graphics,System.Drawing.Rectangle,Zeroit.Framework.BasicCharts.SignalType,System.Drawing.Color)">
            <summary>
            Paints the signal.
            </summary>
            <param name="g">The g.</param>
            <param name="r">The r.</param>
            <param name="st">The st.</param>
            <param name="c">The c.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.CheckMaximum">
            <summary>
            Checks the maximum.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.SignalGenerate.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart">
            <summary>
            Class ZeroitUltimatePieChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <summary>
            Class ZeroitUltimatePieChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <summary>
            Class ZeroitUltimatePieChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <summary>
            Class ZeroitUltimatePieChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <summary>
            Class ZeroitUltimatePieChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <summary>
            Class ZeroitUltimatePieChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
            <summary>
            A control for displaying pie charts.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics">
            <summary>
            Represents the drawing data for a single pie slice. This includes
            GraphicsPath items for each surface and edge of the slice, Regions for
            hit testing, and Pens and Brushes for each surface.
            </summary>
            <seealso cref="!:System.IComparable&lt;Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics&gt;" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.#ctor(Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart,Zeroit.Framework.BasicCharts.PieChartItem,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Constructs a new DrawingMetrics.
            </summary>
            <param name="control">The control this object is associated with.</param>
            <param name="item">The item this object is associated with.</param>
            <param name="drawingBounds">The drawing bounds.</param>
            <param name="startAngle">The start angle of this pie slice, in radians.</param>
            <param name="sweepAngle">The sweep angle of this pie slice, in radians.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.control">
            <summary>
            The control
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.item">
            <summary>
            The item
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.drawingBounds">
            <summary>
            The drawing bounds
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.startAngle">
            <summary>
            The start angle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.sweepAngle">
            <summary>
            The sweep angle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.surfaceBrush">
            <summary>
            The surface brush
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.startBrush">
            <summary>
            The start brush
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.endBrush">
            <summary>
            The end brush
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.exteriorBrush">
            <summary>
            The exterior brush
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.edgePen">
            <summary>
            The edge pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.visibleRegion">
            <summary>
            The visible region
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.topRegion">
            <summary>
            The top region
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.interiorRegion">
            <summary>
            The interior region
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.exteriorRegion">
            <summary>
            The exterior region
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.topFace">
            <summary>
            The top face
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.bottomFace">
            <summary>
            The bottom face
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.startFace">
            <summary>
            The start face
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.endFace">
            <summary>
            The end face
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.exteriorFace">
            <summary>
            The exterior face
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.startFaceEdges">
            <summary>
            The start face edges
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.endFaceEdges">
            <summary>
            The end face edges
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.exteriorFaceEdges">
            <summary>
            The exterior face edges
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.Control">
            <summary>
            The control this object is associated with.
            </summary>
            <value>The control.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.Item">
            <summary>
            The item this control is associated with.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.DrawingBounds">
            <summary>
            Gets or sets the bounds which the whole pie fits in.
            </summary>
            <value>The drawing bounds.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.StartAngle">
            <summary>
            The start angle of this control, in radians.
            </summary>
            <value>The start angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.SweepAngle">
            <summary>
            The sweep angle of this control, in radians.
            </summary>
            <value>The sweep angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.EndAngle">
            <summary>
            The end angle of this control, in radians.
            </summary>
            <value>The end angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.TransformedStartAngle">
            <summary>
            The transformed start angle.  See the TransformAngle method for details about why the angles need to be transformed.
            </summary>
            <value>The transformed start angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.TransformedSweepAngle">
            <summary>
            The transformed end angle. See the TransformAngle method for details about why the angles need to be transformed.
            </summary>
            <value>The transformed sweep angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.OffsetSize">
            <summary>
            Gets the offset size of the pie slice.  This offset is the real screen offset
            at which the pie slice should be drawn.
            </summary>
            <value>The size of the offset.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.IsFocused">
            <summary>
            Gets whether or not the PieChartItem that this DrawingMetrics represents is the focused one.
            </summary>
            <value><c>true</c> if this instance is focused; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ConstructGraphics">
            <summary>
            Constructs all of the pens and brushes required for drawing the slice.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.DestroyGraphics">
            <summary>
            Disposes of all pens and brushes.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.RecreateGraphics">
            <summary>
            Recreates all of the pens and brushes required for drawing the slice.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.CreateExteriorBrush">
            <summary>
            Creates a brush for the exterior face.
            </summary>
            <returns>A brush used for filling the exterior face.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.CreateSurfaceBrush">
            <summary>
            Creates a brush for the top surface of the slice.
            </summary>
            <returns>A brush used for filling the top face.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.CreateInteriorBrush(System.Single)">
            <summary>
            Creates a brush for drawing the interior edge, based on the angle the edge is shown at.
            </summary>
            <param name="angle">The angle of the interior edge.</param>
            <returns>A brush used for filling the interior face.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.CreateEdgePen">
            <summary>
            Creates a brush for drawing the edges.
            </summary>
            <returns>A pen used for drawing the edges.</returns>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.SurfaceBrush">
            <summary>
            Gets the brush used for drawing the top surface.
            </summary>
            <value>The surface brush.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.StartBrush">
            <summary>
            Gets the brush used for drawing the starting interior surface.
            </summary>
            <value>The start brush.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.EndBrush">
            <summary>
            Gets the brush used for drawing the ending interior surface.
            </summary>
            <value>The end brush.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ExteriorBrush">
            <summary>
            Gets the brush used for drawing the exterior surface.
            </summary>
            <value>The exterior brush.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.EdgePen">
            <summary>
            Gets the pen used for drawing the edges.
            </summary>
            <value>The edge pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.TopFace">
            <summary>
            Gets the GraphicsPath that represents the top surface.
            </summary>
            <value>The top face.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.BottomFace">
            <summary>
            Gets the GraphicsPath that represents the bottom surface.
            </summary>
            <value>The bottom face.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.StartFace">
            <summary>
            Gets the GraphicsPath that represents the starting interior surface.
            </summary>
            <value>The start face.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.EndFace">
            <summary>
            Gets the GraphicsPath that represents the ending interior surface.
            </summary>
            <value>The end face.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ExteriorFace">
            <summary>
            Gets the GraphicsPath that represents the exterior surface.
            </summary>
            <value>The exterior face.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.StartFaceEdges">
            <summary>
            Gets the GraphicsPath that represents the edges bordering the starting interior face.
            </summary>
            <value>The start face edges.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.EndFaceEdges">
            <summary>
            Gets the GraphicsPath that represents the edges bordering the ending interior face.
            </summary>
            <value>The end face edges.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ExteriorFaceEdges">
            <summary>
            Gets the GraphicsPath that represents the edges bordering the exterior face.
            </summary>
            <value>The exterior face edges.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.VisibleRegion">
            <summary>
            Gets the Region which represents the entire surface.
            </summary>
            <value>The visible region.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.TopRegion">
            <summary>
            Gets the Region which represents the top surface.
            </summary>
            <value>The top region.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.InteriorRegion">
            <summary>
            Gets the Region which represents the interior surface(s).
            </summary>
            <value>The interior region.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ExteriorRegion">
            <summary>
            Gets the Region which represents the exterior surface(s).
            </summary>
            <value>The exterior region.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.DestroyResources">
            <summary>
            Disposes of all graphics and regions.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.DestroyRegions">
            <summary>
            Disposes of all regions.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ConstructRegions">
            <summary>
            Constructs regions which represent the boundaries of all faces of the pie slice.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ConstructPaths">
            <summary>
            Constructs all GraphicsPaths which represent every face of the slice.
            These GraphicsPaths are centered at (0,0), and a transform is applied to the Graphics
            object which draws the GraphicsPaths.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.CreateInteriorFace(System.Single,System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            Creates an interior face of a pie slice.
            </summary>
            <param name="angle">The angle of the face.</param>
            <param name="edgePath">The GraphicsPath which represents the edges of this face.</param>
            <returns>The GraphicsPath which represents the surface of the face.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.CreateExteriorFace(System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            Creates an exterior face of a pie slice.
            </summary>
            <param name="edgePath">The GraphicsPath which represents the edges of this face.</param>
            <returns>The GraphicsPath which represents the surface of the face.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.AddExteriorFigure(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Adds an exterior face part to the graphics paths given.
            </summary>
            <param name="path">The GraphicsPath which represents the surface of the exterior.</param>
            <param name="edgePath">The GraphicsPath which represents the edges on the exterior.</param>
            <param name="rightPoint">The exterior point at the left of the exterior arc.</param>
            <param name="leftPoint">The exterior point at the right of the exterior arc.</param>
            <param name="startAngle">The start angle of the arc.</param>
            <param name="sweepAngle">The sweep angle of the arc.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.RenderBottom(System.Drawing.Graphics)">
            <summary>
            Draws the bottom edges of the slice.
            </summary>
            <param name="g">The Graphics on which the control is being rendered.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.RenderTop(System.Drawing.Graphics)">
            <summary>
            Draws the top faces and edges of the slice.
            </summary>
            <param name="g">The Graphics on which the control is being rendered.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.RenderInterior(System.Drawing.Graphics)">
            <summary>
            Draws the interior faces and edges of the slice.
            </summary>
            <param name="g">The Graphics on which the control is being rendered.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.RenderExterior(System.Drawing.Graphics)">
            <summary>
            Draws the exterior faces and edges of the slice.
            </summary>
            <param name="g">The Graphics on which the control is being rendered.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.GetTextPosition">
            <summary>
            Gets the position at which the text of the object should be drawn.
            </summary>
            <returns>The point at which the text should be drawn.</returns>
            <remarks>This method returns the center point in the block where the text is drawn.</remarks>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.RenderText(System.Drawing.Graphics)">
            <summary>
            Draws the text of the slice.
            </summary>
            <param name="g">The Graphics on which the control is being rendered.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.TransformAngle(System.Single)">
            <summary>
            Transforms the real angle of a pie slice into the angle that can be drawn at the given inclination.
            The angle must be transformed because when the circle representing the pie is drawn inclined,
            the angle on the circle must be made to match the angle on the corresponding ellipse.
            </summary>
            <param name="angle">The angle on a circle being transformed into an ellipse.</param>
            <returns>The angle as it appears on an ellipse.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ChangeColorBrightness(System.Drawing.Color,System.Single)">
            <summary>
            Changes the brightness of a color by a correctionFactor, which is an integer between
            -1 and 1.  A correction factor of -1 will make the color black, while a correction
            factor of 1 will make the color white.
            </summary>
            <param name="color">The color to change the brightness of.</param>
            <param name="correctionFactor">The factor to change the color's brightness by.</param>
            <returns>The color with modified brightness.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.GetAlphaTransparentSurfaceColor(System.Drawing.Color)">
            <summary>
            Gets the correct alpha-transparent surface color from a given color.  This
            takes into effect the proper brightness correction as well, and differentiates
            between the focused and nonfocused state.
            </summary>
            <param name="color">The color to transform.</param>
            <returns>The transformed color.</returns>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.IsTopItem">
            <summary>
            Gets whether or not this slice is a "top" slice, meaning that the slice contains 3*pi / 2 in its range
            and is thus at the top of the chart on the screen.
            </summary>
            <value><c>true</c> if this instance is top item; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.IsLeftItem">
            <summary>
            Gets whether or not this is a "left" slice, meaning that the slice is bound between
            pi / 2 and 3 * pi / 2 and is thus on the left of the chart on the screen.
            </summary>
            <value><c>true</c> if this instance is left item; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.IsRightItem">
            <summary>
            Gets whether or not this is a "right" slice, meaning that the slice is bound
            between 3 * pi / 2 and 5 * pi / 2 and is thus on the right of the chart on the screen.
            </summary>
            <value><c>true</c> if this instance is right item; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.IsBottomItem">
            <summary>
            Gets whether or not this slice is a "bottom" slice, meaning that the slice contains pi / 2 in its range
            and is thus at the bottom of the chart on the screen.
            </summary>
            <value><c>true</c> if this instance is bottom item; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.CompareTo(Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics)">
            <summary>
            Compares two DrawingMetrics.  The criteria for comparison is what order
            the items should be drawn in.
            </summary>
            <param name="other">The other object being compared.</param>
            <returns>A positive value if this object is greater, 0 if the objects are equal, or a negative value if this object is less.</returns>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemClicked">
            <summary>
            Fired when an item is clicked.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemDoubleClicked">
            <summary>
            Fired when an item is double-clicked.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemFocusChanging">
            <summary>
            Fired when the focus is changing from one item to another.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemFocusChanged">
            <summary>
            Fired when the focus has changed to another item.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.AutoSizePieChanged">
            <summary>
            Fired when the AutoSizePie property has changed.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.RadiusChanged">
            <summary>
            Fired when the radius of the control has changed.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.InclinationChanged">
            <summary>
            Fired when the inclination of the control has changed.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.RotationChanged">
            <summary>
            Fired when the rotation has changed.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ThicknessChanged">
            <summary>
            Fired when the thickness of the control has changed.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ShowEdgesChanged">
            <summary>
            Fired when the ShowEdges property has changed.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TextDisplayModeChanged">
            <summary>
            Fired when the TextDisplayMode property has changed.
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ShowToolTipsChanged">
            <summary>
            Fired when the ShowToolTips property has changed.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireItemClicked(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Called to fire an ItemClicked event.
            </summary>
            <param name="item">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireItemDoubleClicked(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Called to fire an ItemDoubleClicked event.
            </summary>
            <param name="item">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireItemFocusChanging(Zeroit.Framework.BasicCharts.PieChartItem,Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Called to fire an ItemFocusChanging event.
            </summary>
            <param name="oldItem">The item that was previously focused.</param>
            <param name="newItem">The item that is gaining focus.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireItemFocusChanged">
            <summary>
            Called to fire an ItemFocusChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireAutoSizePieChanged">
            <summary>
            Called to fire an AutoSizePieChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireRadiusChanged">
            <summary>
            Called to fire an RadiusChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireInclinationChanged">
            <summary>
            Called to fire an InclinationChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireRotationChanged">
            <summary>
            Called to fire an RotationChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireThicknessChanged">
            <summary>
            Called to fire an ThicknessChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireShowEdgesChanged">
            <summary>
            Called to fire an ShowEdgesChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireTextDisplayModeChanged">
            <summary>
            Called to fire an TextDisplayModeChanged event.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FireShowToolTipsChanged">
            <summary>
            Called to fire an ShowToolTipsChanged event.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemEventArgs">
            <summary>
            Stores a PieChartItem that is involved with an event.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemEventArgs.#ctor(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="item">The item involved with an event.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemEventArgs.item">
            <summary>
            The item involved with the event.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemEventArgs.Item">
            <summary>
            Gets the item involved with the event.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemFocusEventArgs">
            <summary>
            Stores the PieChartItems that are involved with an focus changing event.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemFocusEventArgs.#ctor(Zeroit.Framework.BasicCharts.PieChartItem,Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="oldItem">The item that is losing focus.</param>
            <param name="newItem">The item that is gaining focus.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemFocusEventArgs.oldItem">
            <summary>
            The item that is losing focus.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemFocusEventArgs.newItem">
            <summary>
            The item that is gaining focus.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemFocusEventArgs.OldItem">
            <summary>
            Gets the item that is losing focus.
            </summary>
            <value>The old item.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemFocusEventArgs.NewItem">
            <summary>
            Gets the item that is gaining focus.
            </summary>
            <value>The new item.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection">
            <summary>
            Stores a collection of PieChartItem objects associated with a ZeroitUltimatePieChart.
            </summary>
            <seealso cref="!:System.Collections.Generic.IList&lt;Zeroit.Framework.BasicCharts.PieChartItem&gt;" />
            <seealso cref="T:System.Collections.IList" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.#ctor(Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="container">The ZeroitUltimatePieChart that this collection is associated with.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.container">
            <summary>
            The ZeroitUltimatePieChart this collection is associated with.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.items">
            <summary>
            The list of items stored in this control.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.totalWeight">
            <summary>
            The total weight of all items in this collection.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.TotalItemWeight">
            <summary>
            Gets the total item weight.
            </summary>
            <value>The total item weight.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Sort">
            <summary>
            Sorts the items in the collection based on item weight.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Sort(System.Collections.Generic.IComparer{Zeroit.Framework.BasicCharts.PieChartItem})">
            <summary>
            Sorts the items in the collection using the provided comparer.
            </summary>
            <param name="comparer">The comparer used to compare PieChartItems.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.ChangeItemWeight(System.Double)">
            <summary>
            Changes the item weight.
            </summary>
            <param name="difference">The difference.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#Generic#ICollection{Zeroit#Framework#BasicCharts#PieChartItem}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Add(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The item to add to the collection.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Contains(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>True if the item is found in the collection, otherwise false.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#Generic#ICollection{Zeroit#Framework#BasicCharts#PieChartItem}#CopyTo(Zeroit.Framework.BasicCharts.PieChartItem[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array, starting at a particular array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection.
            The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Remove(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>True if the item was successfully removed from the colleection, otherwise false.  This method
            also returns false if the item is not found in the original collection.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to an array, starting at a particular array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection.
            The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
            <value>The synchronize root.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
            <value><c>true</c> if this instance is synchronized; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.IndexOf(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="item">The object to locate in the list.</param>
            <returns>The index of the item if found in the list, otherwise -1.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.Insert(System.Int32,Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Inserts an item to the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the list.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the list.
            </summary>
            <param name="obj">The item to add to the list.</param>
            <returns>The position at which the item was inserted.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the list contains a specific value.
            </summary>
            <param name="obj">The object to locate in the list.</param>
            <returns>True if an instance of the item was found in the list, otherwise false.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="obj">The object to locate in the list.</param>
            <returns>The index of the item if found in the list, otherwise -1.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="obj">The object to insert into the list.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the list has a fixed size.
            </summary>
            <value><c>true</c> if this instance is fixed size; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollectionEditor">
            <summary>
            Class used to edit an ItemCollection in design time.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.CollectionEditor" />
            <remarks>The designer uses the default CollectionEditor implementation, and overrides
            the display text for items in the item list.</remarks>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollectionEditor"/> class.
            </summary>
            <param name="type">The type of the collection for this editor to edit.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemCollectionEditor.GetDisplayText(System.Object)">
            <summary>
            Gets the display text for a PieChartItem in the collection list.
            </summary>
            <param name="value">The PieChartItem to get the display text for.</param>
            <returns>The string that will be displayed for the PieChartItem.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle">
            <summary>
            Represents the possible styles corresponding to a PieChartItem.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.#ctor(Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart)">
            <summary>
            Constructs a new instance of PieChartItemStyle.
            </summary>
            <param name="container">The control that contains the style.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.container">
            <summary>
            The control that contains the style.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.edgeBrightnessFactor">
            <summary>
            The factor by which edge brightness will be affected.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.surfaceAlphaTransparency">
            <summary>
            The surface alpha transparency factor.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.surfaceBrightnessFactor">
            <summary>
            The factor by which surface brightness will be affected.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.SurfaceAlphaTransparency">
            <summary>
            Gets or sets the surface alpha transparency factor.
            </summary>
            <value>The surface alpha transparency.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">SurfaceAlphaTransparenty - The SurfaceAlphaTransparency must be between 0 and 1 inclusive.</exception>
            <remarks>This value must be between 0 and 1, and represents the multiplier that is applied to the
            alpha value of the color for pie slices that use this style.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.EdgeBrightnessFactor">
            <summary>
            Gets or sets the factor by which edge brightness will be affected.
            </summary>
            <value>The edge brightness factor.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">EdgeBrightnessFactor - The EdgeBrightnessFactor must be between -1 and 1 inclusive.</exception>
            <remarks>See <see cref="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ChangeColorBrightness(System.Drawing.Color,System.Single)" /> for more information about brighness modification.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemStyle.SurfaceBrightnessFactor">
            <summary>
            Gets or sets the factor by which surface brightness will be affected.
            </summary>
            <value>The surface brightness factor.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">SurfaceBrightnessFactor - The SurfaceBrightnessFactor must be between -1 and 1 inclusive.</exception>
            <remarks>See <see cref="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics.ChangeColorBrightness(System.Drawing.Color,System.Single)" /> for more information about brighness modification.</remarks>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TextDisplayTypes">
            <summary>
            Represents the possible text display modes for the ZeroitUltimatePieChart.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TextDisplayTypes.Always">
            <summary>
            The always
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TextDisplayTypes.FitOnly">
            <summary>
            The fit only
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TextDisplayTypes.Never">
            <summary>
            The never
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle">
            <summary>
            Represents the possible styles corresponding to a ZeroitUltimatePieChart.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.#ctor(Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart)">
            <summary>
            Constructs a new instance of PieChartItemStyle.
            </summary>
            <param name="container">The control that contains the style.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.container">
            <summary>
            The control that contains the style.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.autoSize">
            <summary>
            Whether or not the pie should be sized to automatically fit the control.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.radius">
            <summary>
            The radius of the pie.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.thickness">
            <summary>
            The thickness of the pie.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.rotation">
            <summary>
            The rotation of the pie.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.inclination">
            <summary>
            The inclination at which the pie is viewed.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.showEdges">
            <summary>
            Whether or not edges should be drawn.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.textDisplayMode">
            <summary>
            The text display mode of the control.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.showToolTips">
            <summary>
            Whether or not tool tips should be shown on the control.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.AutoSizeMinimumRadius">
            <summary>
            The minimum radius when the control is auto-sized.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.AutoSizePie">
            <summary>
            Gets or sets if the pie should be sized to fit the control.  If this property is true,
            the Radius property is ignored.
            </summary>
            <value><c>true</c> if [automatic size pie]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.Radius">
            <summary>
            Gets or sets radius of the control, in pixels.  If AutoSizePie is set to true, this value will be ignored.
            </summary>
            <value>The radius.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.RadiusInternal">
            <summary>
            Gets or sets the radius of the control, ignoring the AutoSizePie property.
            </summary>
            <value>The radius internal.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Radius - Radius must be a positive value.</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.Thickness">
            <summary>
            Gets or sets thickness of the pie, in pixels.
            </summary>
            <value>The thickness.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thickness - Thickness must be greater than or equal to 0.</exception>
            <remarks>This represents the three-dimensional thickness of the control.
            The actual visual thickness of the control depends on the inclination.  To determine what the apparent
            thickness of the control is, use the Style.VisualHeight property.  The thickness must be greater than or equal to 0.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.VisualThickness">
            <summary>
            Gets the visual thickness of the pie, after the inclination has been taken into account.
            </summary>
            <value>The visual thickness.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.Rotation">
            <summary>
            Gets or sets the rotation of the pie chart.  This is represented in radians, with positive values indicating
            a rotation in the clockwise direction.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.Inclination">
            <summary>
            Gets or sets the inclination of the control.  This is represented in radians, where an angle of 0
            represents looking at the edge of the control and an angle of pi represents looking
            straight down at the top of the pie.
            </summary>
            <value>The inclination.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Inclination - The inclination must be a radian angle greater than 0 and less than or equal to PI / 2.</exception>
            <remarks>The angle must be greater than 0 and less than or equal to pi radians.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.ShowEdges">
            <summary>
            Gets or sets if edges should be drawn on pie slices.  If false, edges are not drawn.
            </summary>
            <value><c>true</c> if [show edges]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.TextDisplayMode">
            <summary>
            Gets or sets if text should be drawn on pie slices.
            </summary>
            <value>The text display mode.</value>
            <remarks>This can have one of three values.  If TextDisplayTypes.Always, the text is always drawn.
            If TextDisplayTypes.FitOnly, the text is drawn only if it fits in the wedge.  If TextDisplayTypes.Never,
            the text is never drawn.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.ShowToolTips">
            <summary>
            Gets or sets if tool tips should be shown when the mouse hovers over pie slices.  If false, tool tips are not shown.
            </summary>
            <value><c>true</c> if [show tool tips]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.ShadowBrightnessFactor">
            <summary>
            Represents the brightness factor used in determining shadow colors.
            </summary>
            <value>The shadow brightness factor.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.EllipseWidth">
            <summary>
            Gets the width of the major axis of the ellipse.  This is half the total
            width of the ellipse.
            </summary>
            <value>The width of the ellipse.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.EllipseHeight">
            <summary>
            Gets the height of the minor axis of the ellipse.  This is half the total
            height of the ellipse.
            </summary>
            <value>The height of the ellipse.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartStyle.HeightWidthRatio">
            <summary>
            Gets the height-width ratio for the ellipse.
            </summary>
            <value>The height width ratio.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.#ctor">
            <summary>
            Constructs a new instance of a ZeroitUltimatePieChart.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.items">
            <summary>
            The collection which holds PieChartItems
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.style">
            <summary>
            The collection of styles that apply to this ZeroitUltimatePieChart.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.itemStyle">
            <summary>
            The style for default (non-focused) items.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.focusedItemStyle">
            <summary>
            The style for focused items.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.focusedItem">
            <summary>
            The PieChartItem that has mouse focus.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.isStructureChanged">
            <summary>
            True if the structure of the pie has changed and the layout needs to be recalculated.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.isVisualChanged">
            <summary>
            True if the pie needs to be redrawn.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.recreateGraphics">
            <summary>
            True if the underlying pens and brushes need to be recreated when the control is redrawn.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.transactionRef">
            <summary>
            A reference counter for the number of change transactions that have been begun and not ended.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.drawingMetrics">
            <summary>
            A list of DrawingMetrics objects that store calculated drawing data about each pie slice.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.toolTip">
            <summary>
            The ToolTip control that is used when hovering over pie slices.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.toolTipDefaultDelay">
            <summary>
            The default ToolTip delay, which is stored when the delay is overwritten by this control.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.EdgeBrightnessFactor">
            <summary>
            Gets or sets the edge brightness factor.
            </summary>
            <value>The edge brightness factor.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.SurfaceAlphaTransparency">
            <summary>
            Gets or sets the surface alpha transparency.
            </summary>
            <value>The surface alpha transparency.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.SurfaceBrightnessFactor">
            <summary>
            Gets or sets the surface brightness factor.
            </summary>
            <value>The surface brightness factor.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Items">
            <summary>
            The collection which holds PieChartItems
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Style">
            <summary>
            The collection of styles that apply to this ZeroitUltimatePieChart.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ItemStyle">
            <summary>
            The collection of styles that apply to this ZeroitUltimatePieChart.
            </summary>
            <value>The item style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FocusedItemStyle">
            <summary>
            The collection of styles that apply to this ZeroitUltimatePieChart.
            </summary>
            <value>The focused item style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.FocusedItem">
            <summary>
            The PieChartItem that has mouse focus.
            </summary>
            <value>The focused item.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Rotation">
            <summary>
            Gets or sets the rotation of the pie chart.  This is represented in radians, with positive values indicating
            a rotation in the clockwise direction.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Inclination">
            <summary>
            Gets or sets the inclination of the control.  This is represented in radians, where an angle of 0
            represents looking at the edge of the control and an angle of pi represents looking
            straight down at the top of the pie.
            </summary>
            <value>The inclination.</value>
            <remarks>The angle must be greater than 0 and less than or equal to pi radians.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Thickness">
            <summary>
            Gets or sets thickness of the pie, in pixels.
            </summary>
            <value>The thickness.</value>
            <remarks>This represents the three-dimensional thickness of the control.
            The actual visual thickness of the control depends on the inclination.  To determine what the apparent
            thickness of the control is, use the Style.VisualHeight property.  The thickness must be greater than or equal to 0.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Radius">
            <summary>
            Gets or sets radius of the control, in pixels.  If AutoSizePie is set to true, this value will be ignored.
            </summary>
            <value>The radius.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.AutoSizePie">
            <summary>
            Gets or sets if the pie should be sized to fit the control.  If this property is true,
            the Radius property is ignored.
            </summary>
            <value><c>true</c> if [automatic size pie]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ShowEdges">
            <summary>
            Gets or sets if edges should be drawn on pie slices.  If false, edges are not drawn.
            </summary>
            <value><c>true</c> if [show edges]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TextDisplayMode">
            <summary>
            Gets or sets if text should be drawn on pie slices.
            </summary>
            <value>The text display mode.</value>
            <remarks>This can have one of three values.  If TextDisplayTypes.Always, the text is always drawn.
            If TextDisplayTypes.FitOnly, the text is drawn only if it fits in the wedge.  If TextDisplayTypes.Never,
            the text is never drawn.</remarks>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ShowToolTips">
            <summary>
            Gets or sets if tool tips should be shown when the mouse hovers over pie slices.  If false, tool tips are not shown.
            </summary>
            <value><c>true</c> if [show tool tips]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.GetChartSize(System.Windows.Forms.Padding)">
            <summary>
            Determines how transparent surfaces of pie slices are.  A SurfaceAlphaTransparency of 1 means the surfaces
            are completely opaque, while a SurfaceAlphaTransparency of 0 means the surfaces are completely transparent.
            </summary>
            <param name="padding">The padding.</param>
            <returns>Size.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.GetMaximumItemOffset">
            <summary>
            Gets the maximum offset of all PieChartItems in the Items collection.
            </summary>
            <returns>The maximum offset of all items.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.GetAutoSizeRadius(System.Drawing.Rectangle,System.Windows.Forms.Padding)">
            <summary>
            Calculates the radius that will be used for autosizing the pie to fit the control.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="padding">The padding.</param>
            <returns>The radius that will fit the pie in the control bounds.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.ConstructDrawingMetrics(System.Drawing.Rectangle,System.Windows.Forms.Padding)">
            <summary>
            Constructs the array of DrawingMetrics, which store drawing information about each pie slice.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="padding">The padding.</param>
            <returns>List&lt;DrawingMetrics&gt;.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.RecreateGraphics(System.Collections.Generic.List{Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics},System.Drawing.Rectangle)">
            <summary>
            Recreates all of the pens and brushes used by the DrawingMetrics that have been constructed.
            </summary>
            <param name="drawingMetrics">The drawing metrics.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DestructDrawingMetrics(System.Collections.Generic.List{Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics})">
            <summary>
            Destroys all of the DrawingMetrics currently in the array by releasing all of their resources.
            </summary>
            <param name="drawingMetrics">The drawing metrics.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.SetFocusedItem(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Set the currently focused PieChartItem.
            </summary>
            <param name="item">The item that currently has mouse focus.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.HitTest(System.Drawing.PointF)">
            <summary>
            Performs a hit test to see which PieChartItem is under the current mouse position.
            </summary>
            <param name="controlPoint">The control point.</param>
            <returns>The DrawingMetrics of the item under the point, or null if no item is there.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnMouseEnter(System.EventArgs)">
            <summary>
            Handles the MouseEnter event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnMouseLeave(System.EventArgs)">
            <summary>
            Handles the MouseLeave event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseClick event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnDoubleClick(System.EventArgs)">
            <summary>
            Handles the DoubleClick event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnSizeChanged(System.EventArgs)">
            <summary>
            Handles the SizeChanged event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnPaddingChanged(System.EventArgs)">
            <summary>
            Handles the PaddingChanged event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Render(System.Drawing.Graphics,System.Collections.Generic.List{Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.DrawingMetrics},System.Drawing.Rectangle,System.Windows.Forms.Padding)">
            <summary>
            Renders the given DrawingMetrics, which are calculated using ConstructDrawingMetrics.
            </summary>
            <param name="g">The graphics surface on which the chart is being rendered.</param>
            <param name="drawingMetrics">The drawing metrics to render.</param>
            <param name="bounds">The bounds.</param>
            <param name="padding">The padding.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.SaveAs(System.String,System.Drawing.Imaging.ImageFormat,System.Drawing.Size)">
            <summary>
            Save the chart as an image.
            </summary>
            <param name="fileName">The path to the file where the image will be saved.</param>
            <param name="format">The format to save the image in.</param>
            <param name="sizeInPixels">The size of the image, in pixels.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.SaveAs(System.String,System.Drawing.Imaging.ImageFormat,System.Drawing.Size,System.Windows.Forms.Padding)">
            <summary>
            Saves the chart as an image.
            </summary>
            <param name="fileName">The path to the file where the image will be saved.</param>
            <param name="format">The format to save the image in.</param>
            <param name="sizeInPixels">The size of the image, in pixels.</param>
            <param name="padding">The padding which defines the border of the image.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.AttachPrintDocument(System.Drawing.Printing.PrintDocument)">
            <summary>
            Registers a PrintDocument to print this pie chart.
            </summary>
            <param name="doc">The PrintDocument to register.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnPrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Called by a registered PrintDocument to control printing of the chart.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the painting of the control.
            </summary>
            <param name="pe">The paint event arguments.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.BeginModification">
            <summary>
            Starts a modification transaction.  As long as any modification trasactions are open,
            the changes made to the control will not be reflected.  It is necessary to call
            EndModification for each call to BeginModification; otherwise, the control will
            never redraw.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.EndModification">
            <summary>
            Ends a modification transaction.  As long as any modification trasactions are open,
            the changes made to the control will not be reflected.  It is necessary to call
            EndModification for each call to BeginModification; otherwise, the control will
            never redraw.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.MarkStructuralChange">
            <summary>
            Sets a flag that indicates the control has changed structurally, and that DrawingMetrics
            will need to be completely recreated.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.MarkVisualChange">
            <summary>
            Sets a flag that indicates that the control needs to be refreshed, but that no structural
            or resource (pen/brush) altering changes were made.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.MarkVisualChange(System.Boolean)">
            <summary>
            Sets a flag that indicates the control needs to be refreshed.  If recreateGraphics is true,
            then pens and brushes will be recreated.
            </summary>
            <param name="recreateGraphics">True if pens and brushes should be recreated.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.autoAnimate">
            <summary>
            The automatic animate
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.timerDecrement">
            <summary>
            The timer decrement
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.speedMultiplier">
            <summary>
            The speed multiplier
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.change">
            <summary>
            The change
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.reverse">
            <summary>
            The reverse
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.sluggish">
            <summary>
            The sluggish
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.AutoAnimate">
            <summary>
            Gets or sets a value indicating whether [automatic animate].
            </summary>
            <value><c>true</c> if [automatic animate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Reverse">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart"/> is reverse.
            </summary>
            <value><c>true</c> if reverse; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Change">
            <summary>
            Gets or sets the change.
            </summary>
            <value>The change.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Sluggish">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart"/> is sluggish.
            </summary>
            <value><c>true</c> if sluggish; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the Timer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.TimerDecrement_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the TimerDecrement control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.IncludeInConstructor">
            <summary>
            Includes the in constructor.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.PieChartItemEventHandler">
            <summary>
            Delegate PieChartItemEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.PieChartItemFocusEventHandler">
            <summary>
            Delegate PieChartItemFocusEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart.PieChartItemFocusEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.PieChartItem">
            <summary>
            Represents a single pie slice in a pie chart.
            </summary>
            <seealso cref="T:System.ICloneable" />
            <seealso cref="!:System.IComparable&lt;Zeroit.Framework.BasicCharts.PieChartItem&gt;" />
            <seealso cref="T:System.Runtime.Serialization.ISerializable" />
            <summary>
            Class PieChartItem.
            </summary>
            <seealso cref="T:System.ICloneable" />
            <seealso cref="!:System.IComparable&lt;Zeroit.Framework.BasicCharts.PieChartItem&gt;" />
            <seealso cref="T:System.Runtime.Serialization.ISerializable" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.#ctor(System.Double)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="weight">The weight the item has.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.#ctor(System.Double,System.Drawing.Color)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="weight">The weight the item has.</param>
            <param name="color">The fill color of the item.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.#ctor(System.Double,System.Drawing.Color,System.String)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="weight">The weight the item has.</param>
            <param name="color">The fill color of the item.</param>
            <param name="text">The textual representation of the item.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.#ctor(System.Double,System.Drawing.Color,System.String,System.String)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="weight">The weight the item has.</param>
            <param name="color">The fill color of the item.</param>
            <param name="text">The textual representation of the item.</param>
            <param name="toolTipText">The tool tip text displayed when the mouse hovers over the item.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.#ctor(System.Double,System.Drawing.Color,System.String,System.String,System.Single)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="weight">The weight the item has.</param>
            <param name="color">The fill color of the item.</param>
            <param name="text">The textual representation of the item.</param>
            <param name="toolTipText">The tool tip text displayed when the mouse hovers over the item.</param>
            <param name="offset">The offset of the item from the center of the pie, in pixels.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="info">The serialization information for deserialization.</param>
            <param name="context">The context for deserialization.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PieChartItem.text">
            <summary>
            The textual representation of the item.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PieChartItem.toolTipText">
            <summary>
            The tool tip text displayed when the mouse hovers over the item.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PieChartItem.weight">
            <summary>
            The weight the item has.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PieChartItem.offset">
            <summary>
            The offset of the item from the center of the pie, in pixels.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PieChartItem.color">
            <summary>
            The fill color of the item.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PieChartItem.tag">
            <summary>
            A user-defined tag object
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PieChartItem.owner">
            <summary>
            The control which contains this item.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PieChartItem.Text">
            <summary>
            Gets or sets the textual representation of the item.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PieChartItem.ToolTipText">
            <summary>
            Gets or sets the tool tip text displayed when the mouse hovers over the item.
            </summary>
            <value>The tool tip text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PieChartItem.Weight">
            <summary>
            Gets or sets the weight the item has.  This weight is taken over the total weight of all items
            to determine how large of an angle this slice has.
            </summary>
            <value>The weight.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PieChartItem.Percent">
            <summary>
            Gets the percent of the control occupied by this item.
            </summary>
            <value>The percent.</value>
            <exception cref="T:System.InvalidOperationException">The item percent cannot be calculated because the item does not belong to a pie chart.</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PieChartItem.Offset">
            <summary>
            Gets or sets the offset of the item from the center of the pie, in pixels.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PieChartItem.Color">
            <summary>
            Gets or sets the fill color of the item.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PieChartItem.Tag">
            <summary>
            Gets or sets a user-defined tag value.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.MarkStructure">
            <summary>
            Shortcut method to inform the control that the structure has changed.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.MarkVisual">
            <summary>
            Shortcut method to inform the control that the control needs refreshing.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.MarkVisual(System.Boolean)">
            <summary>
            Shortcut method to inform the control that the control needs refreshing.
            </summary>
            <param name="recreateGraphics">True if the underlying pens and brushes need to be recreated.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.SetOwner(Zeroit.Framework.BasicCharts.ZeroitUltimatePieChart)">
            <summary>
            Sets the owning control.
            </summary>
            <param name="control">The control that contains this item.</param>
            <exception cref="T:System.InvalidOperationException">A pie chart item cannot belong to two different controls.</exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.UpdateWeight(System.Double)">
            <summary>
            Updates the weight.
            </summary>
            <param name="difference">The difference.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Loads the state of the item from the specified SerializationInfo.
            </summary>
            <param name="info">The SerializationInfo that describes the item.</param>
            <param name="context">The state of the stream during deserialization.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.Clone">
            <summary>
            Makes an exact copy of this item.
            </summary>
            <returns>A new replica of this item.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.CompareTo(Zeroit.Framework.BasicCharts.PieChartItem)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="other">An object to compare with this instance.</param>
            <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="other" /> in the sort order.  Zero This instance occurs in the same position in the sort order as <paramref name="other" />. Greater than zero This instance follows <paramref name="other" /> in the sort order.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.PieChartItem.ItemConverter">
            <summary>
            Used to convert PieChartItems to an InstanceDescriptor for runtime design.
            </summary>
            <seealso cref="T:System.ComponentModel.TypeConverter" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.ItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PieChartItem.ItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo. If a null reference is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The type to convert the value parameter to.</param>
            <returns>An object that represents the converted value.</returns>
            <exception cref="T:System.ArgumentNullException">destinationType</exception>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartDesigner">
            <summary>
            Class ZeroitUltimatePieChartDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList">
            <summary>
            Class ZeroitUltimatePieChartSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.DesignerActionUIService">
            <summary>
            Gets the designer action UI service.
            </summary>
            <value>The designer action UI service.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.AutoSizePie">
            <summary>
            Gets or sets a value indicating whether [automatic size pie].
            </summary>
            <value><c>true</c> if [automatic size pie]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.ShowEdges">
            <summary>
            Gets or sets a value indicating whether [show edges].
            </summary>
            <value><c>true</c> if [show edges]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.ShowToolTips">
            <summary>
            Gets or sets a value indicating whether [show tool tips].
            </summary>
            <value><c>true</c> if [show tool tips]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.FocusedItemStyle">
            <summary>
            Gets or sets the focused item style.
            </summary>
            <value>The focused item style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.Inclination">
            <summary>
            Gets or sets the inclination.
            </summary>
            <value>The inclination.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <value>The radius.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.TextDisplayMode">
            <summary>
            Gets or sets the text display mode.
            </summary>
            <value>The text display mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.EdgeBrightnessFactor">
            <summary>
            Gets or sets the edge brightness factor.
            </summary>
            <value>The edge brightness factor.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.SurfaceAlphaTransparency">
            <summary>
            Gets or sets the surface alpha transparency.
            </summary>
            <value>The surface alpha transparency.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.SurfaceBrightnessFactor">
            <summary>
            Gets or sets the surface brightness factor.
            </summary>
            <value>The surface brightness factor.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.AutoAnimate">
            <summary>
            Gets or sets a value indicating whether [automatic animate].
            </summary>
            <value><c>true</c> if [automatic animate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitUltimatePieChartSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChart">
            <summary>
            Class ZeroitBarChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChart.DrawType">
            <summary>
            Enum DrawType
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.DrawType.Gradient">
            <summary>
            The gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.DrawType.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.DrawType.Hatch">
            <summary>
            The hatch
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChart.Aligning">
            <summary>
            Enum Aligning
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Aligning.Near">
            <summary>
            The near
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Aligning.Center">
            <summary>
            The center
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Aligning.Far">
            <summary>
            The far
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChart.Orientation">
            <summary>
            Enum Orientation
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Orientation.Horizontal">
            <summary>
            The horizontal
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Orientation.Vertical">
            <summary>
            The vertical
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChart.SortStyle">
            <summary>
            Enum SortStyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.SortStyle.Ascending">
            <summary>
            The ascending
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.SortStyle.Descending">
            <summary>
            The descending
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.SortStyle.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitBarChart.Style">
            <summary>
            Enum Style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Style.Flat">
            <summary>
            The flat
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Style.Material">
            <summary>
            The material
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.Style.Bootstrap">
            <summary>
            The bootstrap
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.materialColors">
            <summary>
            The material colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.bootstrapColors">
            <summary>
            The bootstrap colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart._drawMode">
            <summary>
            The draw mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.items">
            <summary>
            The items
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.filledGradient">
            <summary>
            The filled gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.linMode">
            <summary>
            The linear gradient mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.gridSize">
            <summary>
            The grid size
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.filledColor">
            <summary>
            The filled color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.unfilledColor">
            <summary>
            The unfilled color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.splitterColor">
            <summary>
            The splitter color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.textColor">
            <summary>
            The text color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.sorting">
            <summary>
            The sorting
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.textAlignment">
            <summary>
            The text alignment
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.graphOrientation">
            <summary>
            The graph orientation
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.graphStyle">
            <summary>
            The graph style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.showGrid">
            <summary>
            The show grid
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.hatchBrush">
            <summary>
            The hatch brushgradient1
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitBarChart.hatchStyle">
            <summary>
            The hatch style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.HatchStyle">
            <summary>
            Gets or sets the hatch style.
            </summary>
            <value>The hatch style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.HatchBrush">
            <summary>
            Gets or sets the color hatch brush.
            </summary>
            <value>The color hatch brush.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.GridSize">
            <summary>
            Gets or sets the size of the grid.
            </summary>
            <value>The size of the grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.FilledGradient">
            <summary>
            Gets or sets the filled gradient.
            </summary>
            <value>The filled gradient.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.GradientMode">
            <summary>
            Gets or sets the gradient mode.
            </summary>
            <value>The gradient mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.DrawMode">
            <summary>
            Gets or sets the draw mode.
            </summary>
            <value>The draw mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.FilledColor">
            <summary>
            Gets or sets the color of the filled.
            </summary>
            <value>The color of the filled.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.GraphOrientation">
            <summary>
            Gets or sets the graph orientation.
            </summary>
            <value>The graph orientation.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.GraphStyle">
            <summary>
            Gets or sets the graph style.
            </summary>
            <value>The graph style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.ShowGrid">
            <summary>
            Gets or sets a value indicating whether [show grid].
            </summary>
            <value><c>true</c> if [show grid]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.Sorting">
            <summary>
            Gets or sets the sorting.
            </summary>
            <value>The sorting.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.SplitterColor">
            <summary>
            Gets or sets the color of the splitter.
            </summary>
            <value>The color of the splitter.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.UnfilledColor">
            <summary>
            Gets or sets the color of the unfilled.
            </summary>
            <value>The color of the unfilled.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.MaterialColors">
            <summary>
            Gets or sets the material colors.
            </summary>
            <value>The material colors.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitBarChart.BootstrapColors">
            <summary>
            Gets or sets the bootstrap colors.
            </summary>
            <value>The bootstrap colors.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitBarChart" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChart.ClearItems">
            <summary>
            Clears the items.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitBarChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitLineGraph">
            <summary>
            Summary description for ZeroitLineGraph.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.months">
            <summary>
            The months
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph._xAxisValue">
            <summary>
            The x axis value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.incrementValue">
            <summary>
            The increment value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph._IsYAxisFormulaRequired">
            <summary>
            The is y axis formula required
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.hTable">
            <summary>
            The h table
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.xAxisSplits">
            <summary>
            The x axis splits
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XValues">
            <summary>
            Gets or sets the x values.
            </summary>
            <value>The x values.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph._SetMonth">
            <summary>
            The set month
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitLineGraph.YAxisScale">
            <summary>
            Exposed to allow parent to define the values to graph.  When this property
            is assigned to, the control is invalidated and thus redrawn.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.YAxisScale.MultiplesOf10">
            <summary>
            The multiples of10
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.YAxisScale.MultiplesOf25">
            <summary>
            The multiples of25
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.YAxisScale.MultiplesOf50">
            <summary>
            The multiples of50
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.yAxisDrawingScale">
            <summary>
            The y axis drawing scale
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitLineGraph.YAxisScaleStyle">
            <summary>
            Gets or sets the y axis scale style.
            </summary>
            <value>The y axis scale style.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale">
            <summary>
            Exposed to allow parent to define the values to graph.  When this property
            is assigned to, the control is invalidated and thus redrawn.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale.FirstQuarter">
            <summary>
            The first quarter
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale.SecondQuarter">
            <summary>
            The second quarter
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale.ThirdQuarter">
            <summary>
            The third quarter
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale.FourthQuarter">
            <summary>
            The fourth quarter
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale.FirstSixMonths">
            <summary>
            The first six months
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale.SecondSixMonths">
            <summary>
            The second six months
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale.Year">
            <summary>
            The year
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitLineGraph.xAxisDrawingScale">
            <summary>
            The x axis drawing scale
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScaleStyle">
            <summary>
            Gets or sets the x axis scale style.
            </summary>
            <value>The x axis scale style.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitLineGraph"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.PlotYAxis(Zeroit.Framework.BasicCharts.ZeroitLineGraph.YAxisScale)">
            <summary>
            Plots the points on the y axis with respect to the scale set.
            </summary>
            <param name="yScale">Enum value</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.plotXAxis(Zeroit.Framework.BasicCharts.ZeroitLineGraph.XAxisScale)">
            <summary>
            Plots the points on the y axis with respect to the scale set.
            </summary>
            <param name="xScale">Enum value</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.GenerateGraph">
            <summary>
            Generates the graph based on the hastable values provided by the user in the parent form.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitLineGraph.LineGraph_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the LineGraph control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Design">
            <summary>
            Class Design.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Design.Controls">
            <summary>
            Class Controls.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Controls.SetDoubleBuffered(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Sets the double buffered.
            </summary>
            <param name="ctrl">The control.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Design.Drawing">
            <summary>
            Class Drawing.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.Design.Drawing"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.DrawRoundedPath(System.Drawing.Graphics,System.Drawing.Color,System.Single,System.Drawing.Rectangle,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the rounded path.
            </summary>
            <param name="g">The g.</param>
            <param name="c">The c.</param>
            <param name="size">The size.</param>
            <param name="rect">The rect.</param>
            <param name="curve">The curve.</param>
            <param name="TopLeft">if set to <c>true</c> [top left].</param>
            <param name="TopRight">if set to <c>true</c> [top right].</param>
            <param name="BottomLeft">if set to <c>true</c> [bottom left].</param>
            <param name="BottomRight">if set to <c>true</c> [bottom right].</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.ExtractIcon(System.Drawing.Icon,System.Int32)">
            <summary>
            Extracts the icon.
            </summary>
            <param name="original">The original.</param>
            <param name="size">The size.</param>
            <returns>Bitmap.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.FadeEllipse(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Fades the ellipse.
            </summary>
            <param name="g">The g.</param>
            <param name="c">The c.</param>
            <param name="rect">The rect.</param>
            <param name="stages">The stages.</param>
            <param name="stageWidth">Width of the stage.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.FadeEllipse(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fades the ellipse.
            </summary>
            <param name="g">The g.</param>
            <param name="c">The c.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="stages">The stages.</param>
            <param name="stageWidth">Width of the stage.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.FadeRectangle(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Fades the rectangle.
            </summary>
            <param name="g">The g.</param>
            <param name="c">The c.</param>
            <param name="rect">The rect.</param>
            <param name="stages">The stages.</param>
            <param name="stageWidth">Width of the stage.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.FadeRectangle(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fades the rectangle.
            </summary>
            <param name="g">The g.</param>
            <param name="c">The c.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="stages">The stages.</param>
            <param name="stageWidth">Width of the stage.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.FillRoundedPath(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Fills the rounded path.
            </summary>
            <param name="g">The g.</param>
            <param name="c">The c.</param>
            <param name="rect">The rect.</param>
            <param name="curve">The curve.</param>
            <param name="TopLeft">if set to <c>true</c> [top left].</param>
            <param name="TopRight">if set to <c>true</c> [top right].</param>
            <param name="BottomLeft">if set to <c>true</c> [bottom left].</param>
            <param name="BottomRight">if set to <c>true</c> [bottom right].</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.FillRoundedPath(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Fills the rounded path.
            </summary>
            <param name="g">The g.</param>
            <param name="b">The b.</param>
            <param name="rect">The rect.</param>
            <param name="curve">The curve.</param>
            <param name="TopLeft">if set to <c>true</c> [top left].</param>
            <param name="TopRight">if set to <c>true</c> [top right].</param>
            <param name="BottomLeft">if set to <c>true</c> [bottom left].</param>
            <param name="BottomRight">if set to <c>true</c> [bottom right].</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.GetCircleIntersectionPoints(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Gets the circle intersection points.
            </summary>
            <param name="ellipse">The ellipse.</param>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
            <returns>Point[].</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.GetCircleIntersectionPoints(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the circle intersection points.
            </summary>
            <param name="ellipse">The ellipse.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns>Point[].</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.GetPointOnLine(System.Drawing.Point,System.Drawing.Point,System.Int32)">
            <summary>
            Gets the point on line.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="perc">The perc.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.GetPointOnLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the point on line.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="perc">The perc.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.GetPointOnLine(System.Int32,System.Int32,System.Drawing.Point,System.Int32)">
            <summary>
            Gets the point on line.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="point2">The point2.</param>
            <param name="perc">The perc.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.GetPointOnLine(System.Drawing.Point,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the point on line.
            </summary>
            <param name="point1">The point1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="perc">The perc.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.MeasurePointDistance(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Measures the point distance.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.MeasurePointDistance(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Measures the point distance.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.Drawing.RoundRectangle(System.Drawing.Rectangle,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Rounds the rectangle.
            </summary>
            <param name="r">The r.</param>
            <param name="Curve">The curve.</param>
            <param name="TopLeft">if set to <c>true</c> [top left].</param>
            <param name="TopRight">if set to <c>true</c> [top right].</param>
            <param name="BottomLeft">if set to <c>true</c> [bottom left].</param>
            <param name="BottomRight">if set to <c>true</c> [bottom right].</param>
            <returns>GraphicsPath.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Design.GridStyle">
            <summary>
            Enum GridStyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.GridStyle.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.GridStyle.Horizontal">
            <summary>
            The horizontal
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.GridStyle.Vertical">
            <summary>
            The vertical
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.GridStyle.Crossed">
            <summary>
            The crossed
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Design.Orientation">
            <summary>
            Enum Orientation
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.Orientation.Horizontal">
            <summary>
            The horizontal
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.Orientation.Vertical">
            <summary>
            The vertical
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors">
            <summary>
            Class MetroColors.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._AccentBlue">
            <summary>
            The accent blue
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._AccentPurple">
            <summary>
            The accent purple
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._AccentOrange">
            <summary>
            The accent orange
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._AccentDarkBlue">
            <summary>
            The accent dark blue
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._AccentLightBlue">
            <summary>
            The accent light blue
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._SelectionColor">
            <summary>
            The selection color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._PopUpBorder">
            <summary>
            The pop up border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._PopUpFont">
            <summary>
            The pop up font
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._TabItemHover">
            <summary>
            The tab item hover
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DisabledBorder">
            <summary>
            The disabled border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._TaskColor">
            <summary>
            The task color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DarkTaskColor">
            <summary>
            The dark task color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightDefault">
            <summary>
            The light default
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightDarkDefault">
            <summary>
            The light dark default
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightHover">
            <summary>
            The light hover
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightIcon">
            <summary>
            The light icon
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightBorder">
            <summary>
            The light border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightFont">
            <summary>
            The light font
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightDisabled">
            <summary>
            The light disabled
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightDisabledFont">
            <summary>
            The light disabled font
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._LightSwitchRail">
            <summary>
            The light switch rail
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DarkDefault">
            <summary>
            The dark default
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DarkHover">
            <summary>
            The dark hover
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DarkIcon">
            <summary>
            The dark icon
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DarkFont">
            <summary>
            The dark font
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DarkDisabled">
            <summary>
            The dark disabled
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._DarkDisabledFont">
            <summary>
            The dark disabled font
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors._TextShadow">
            <summary>
            The text shadow
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.AccentBlue">
            <summary>
            Gets the accent blue.
            </summary>
            <value>The accent blue.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.AccentDarkBlue">
            <summary>
            Gets the accent dark blue.
            </summary>
            <value>The accent dark blue.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.AccentLightBlue">
            <summary>
            Gets the accent light blue.
            </summary>
            <value>The accent light blue.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.AccentOrange">
            <summary>
            Gets the accent orange.
            </summary>
            <value>The accent orange.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.AccentPurple">
            <summary>
            Gets the accent purple.
            </summary>
            <value>The accent purple.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DarkDefault">
            <summary>
            Gets the dark default.
            </summary>
            <value>The dark default.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DarkDisabled">
            <summary>
            Gets the dark disabled.
            </summary>
            <value>The dark disabled.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DarkDisabledFont">
            <summary>
            Gets the dark disabled font.
            </summary>
            <value>The dark disabled font.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DarkFont">
            <summary>
            Gets the dark font.
            </summary>
            <value>The dark font.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DarkHover">
            <summary>
            Gets the dark hover.
            </summary>
            <value>The dark hover.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DarkIcon">
            <summary>
            Gets the dark icon.
            </summary>
            <value>The dark icon.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DarkTaskColor">
            <summary>
            Gets the color of the dark task.
            </summary>
            <value>The color of the dark task.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.DisabledBorder">
            <summary>
            Gets the disabled border.
            </summary>
            <value>The disabled border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightBorder">
            <summary>
            Gets the light border.
            </summary>
            <value>The light border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightDarkDefault">
            <summary>
            Gets the light dark default.
            </summary>
            <value>The light dark default.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightDefault">
            <summary>
            Gets the light default.
            </summary>
            <value>The light default.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightDisabled">
            <summary>
            Gets the light disabled.
            </summary>
            <value>The light disabled.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightDisabledFont">
            <summary>
            Gets the light disabled font.
            </summary>
            <value>The light disabled font.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightFont">
            <summary>
            Gets the light font.
            </summary>
            <value>The light font.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightHover">
            <summary>
            Gets the light hover.
            </summary>
            <value>The light hover.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightIcon">
            <summary>
            Gets the light icon.
            </summary>
            <value>The light icon.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.LightSwitchRail">
            <summary>
            Gets the light switch rail.
            </summary>
            <value>The light switch rail.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.PopUpBorder">
            <summary>
            Gets the pop up border.
            </summary>
            <value>The pop up border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.PopUpFont">
            <summary>
            Gets the pop up font.
            </summary>
            <value>The pop up font.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.SelectionColor">
            <summary>
            Gets the color of the selection.
            </summary>
            <value>The color of the selection.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.TabItemHover">
            <summary>
            Gets the tab item hover.
            </summary>
            <value>The tab item hover.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.TaskColor">
            <summary>
            Gets the color of the task.
            </summary>
            <value>The color of the task.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.TextShadow">
            <summary>
            Gets the text shadow.
            </summary>
            <value>The text shadow.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.ChangeColorBrightness(System.Drawing.Color,System.Single)">
            <summary>
            Changes the color brightness.
            </summary>
            <param name="color">The color.</param>
            <param name="correctionFactor">The correction factor.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.ColorToHTML(System.Drawing.Color)">
            <summary>
            Colors to HTML.
            </summary>
            <param name="C">The c.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.GetCorrectBackColor(Zeroit.Framework.BasicCharts.Metro.Design.Style,System.Drawing.Color,System.Boolean)">
            <summary>
            Gets the color of the correct back.
            </summary>
            <param name="style">The style.</param>
            <param name="defaultColor">The default color.</param>
            <param name="isEnabled">if set to <c>true</c> [is enabled].</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.GetCorrectForeColor(Zeroit.Framework.BasicCharts.Metro.Design.Style,System.Drawing.Color,System.Boolean)">
            <summary>
            Gets the color of the correct fore.
            </summary>
            <param name="style">The style.</param>
            <param name="defaultColor">The default color.</param>
            <param name="isEnabled">if set to <c>true</c> [is enabled].</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.HTMLToColor(System.String)">
            <summary>
            HTMLs to color.
            </summary>
            <param name="sColor">Color of the s.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.Design.MetroColors.InvertColor(System.Drawing.Color)">
            <summary>
            Inverts the color.
            </summary>
            <param name="c">The c.</param>
            <returns>Color.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Design.Style">
            <summary>
            Enum Style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.Style.Light">
            <summary>
            The light
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.Style.Dark">
            <summary>
            The dark
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Design.Style.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Helpers">
            <summary>
            Class Helpers.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.Helpers.MouseState">
            <summary>
            Enum MouseState
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Helpers.MouseState.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Helpers.MouseState.Over">
            <summary>
            The over
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.Helpers.MouseState.Pressed">
            <summary>
            The pressed
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph">
            <summary>
            A class collection for rendering metro graph.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BrushType">
            <summary>
            Enum BrushType
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BrushType.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BrushType.Gradient">
            <summary>
            The gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BrushType.Hatch">
            <summary>
            The hatch
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.drawMode">
            <summary>
            The draw mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._Style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._GridColor">
            <summary>
            The grid color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._SingleLineColor">
            <summary>
            The single line color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._ClassicFillColor">
            <summary>
            The classic fill color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._GradientColor">
            <summary>
            The gradient color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._HoverColor">
            <summary>
            The hover color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._HoverBoxColor">
            <summary>
            The hover box color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._HoverBoxBorderColor">
            <summary>
            The hover box border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._BorderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._DrawHoverLine">
            <summary>
            The draw hover line
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._DrawHoverData">
            <summary>
            The draw hover data
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._UseGradient">
            <summary>
            The use gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._DashStyle">
            <summary>
            The dash style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._DrawVerticalLines">
            <summary>
            The draw vertical lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._DrawHorizontalLines">
            <summary>
            The draw horizontal lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._SingleLine">
            <summary>
            The single line
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.curved">
            <summary>
            The curved
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._SingleLineThickness">
            <summary>
            The single line thickness
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._SingleLineShadow">
            <summary>
            The single line shadow
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._SidePadding">
            <summary>
            The side padding
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._OverrideMinimum">
            <summary>
            The override minimum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._OverrideMaximum">
            <summary>
            The override maximum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._OverriddenMinimum">
            <summary>
            The overridden minimum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._OverriddenMaximum">
            <summary>
            The overridden maximum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._Values">
            <summary>
            The values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._SmoothValues">
            <summary>
            The smooth values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._CurrentValue">
            <summary>
            The current value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._Minimum">
            <summary>
            The minimum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._Maximum">
            <summary>
            The maximum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._Index">
            <summary>
            The index
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._GradientPointA">
            <summary>
            The gradient point a
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._GradientPointB">
            <summary>
            The gradient point b
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.FB1">
            <summary>
            The f b1
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.FB2">
            <summary>
            The f b2
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.R1">
            <summary>
            The r1
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.R2">
            <summary>
            The r2
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.R3">
            <summary>
            The r3
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SW">
            <summary>
            The sw
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SH">
            <summary>
            The sh
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SHH">
            <summary>
            The SHH
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.LastMove">
            <summary>
            The last move
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph._AutoStyle">
            <summary>
            The automatic style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.outerBorder">
            <summary>
            The outer border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hoverCircleTransparency">
            <summary>
            The hover circle transparency
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverCircleAlpha">
            <summary>
            Gets or sets the hover circle alpha.
            </summary>
            <value>The hover circle alpha.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.DrawMode">
            <summary>
            Gets or sets the draw mode.
            </summary>
            <value>The draw mode.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.enableHatchAnimation">
            <summary>
            The enable hatch animation
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hatchStyle">
            <summary>
            The hatch style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HatchStyle">
            <summary>
            Gets or sets the hatch style.
            </summary>
            <value>The hatch style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HatchAnimation">
            <summary>
            Gets or sets a value indicating whether [hatch animation].
            </summary>
            <value><c>true</c> if [hatch animation]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HatchSpeed">
            <summary>
            Gets or sets the hatch speed.
            </summary>
            <value>The hatch speed.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.reactorOFS">
            <summary>
            The reactor ofs
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hatchSpeed">
            <summary>
            The hatch speed
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.ReactorCreateHandle">
            <summary>
            Reactors the create handle.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.CreateHandle">
            <summary>
            Creates a handle for the control.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.ReactorAnimate">
            <summary>
            Reactors the animate.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.showAxis">
            <summary>
            The show axis
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.splineAxis">
            <summary>
            The spline axis
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.ShowAxis">
            <summary>
            Gets or sets a value indicating whether [show axis].
            </summary>
            <value><c>true</c> if [show axis]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OuterBorder">
            <summary>
            Gets or sets a value indicating whether to draw the outer border.
            </summary>
            <value><c>true</c> if outer border; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.AutoStyle">
            <summary>
            Gets or sets a value indicating whether to automatically style the control.
            </summary>
            <value><c>true</c> if automatic style; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.
            </summary>
            <value>The background image layout.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.ClassicFillColor">
            <summary>
            Gets or sets the color of the classic fill.
            </summary>
            <value>The color of the classic fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.ContextMenuStrip">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.
            </summary>
            <value>The context menu strip.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.DashStyle">
            <summary>
            Gets or sets the dash style.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.BackColor">
            <summary>
            Gets or sets the default color.
            </summary>
            <value>The default color.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.DrawHorizontalLines">
            <summary>
            Gets or sets a value indicating whether to draw horizontal lines.
            </summary>
            <value><c>true</c> if draw horizontal lines; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.DrawHoverData">
            <summary>
            Gets or sets a value indicating whether to draw hover data.
            </summary>
            <value><c>true</c> if [draw hover data]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.DrawHoverLine">
            <summary>
            Gets or sets a value indicating whether to draw hover line.
            </summary>
            <value><c>true</c> if draw hover line; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.DrawVerticalLines">
            <summary>
            Gets or sets a value indicating whether to draw vertical lines.
            </summary>
            <value><c>true</c> if draw vertical lines; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.GradientColor">
            <summary>
            Gets or sets the color of the gradient.
            </summary>
            <value>The color of the gradient.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.GradientPointA">
            <summary>
            Gets or sets the gradient point.
            </summary>
            <value>The gradient point a.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.GradientPointB">
            <summary>
            Gets or sets the gradient point.
            </summary>
            <value>The gradient point b.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.GridColor">
            <summary>
            Gets or sets the color of the grid.
            </summary>
            <value>The color of the grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverBoxBorderColor">
            <summary>
            Gets or sets the color of the hover box border.
            </summary>
            <value>The color of the hover box border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverBoxColor">
            <summary>
            Gets or sets the color of the hover box.
            </summary>
            <value>The color of the hover box.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverColor">
            <summary>
            Gets or sets the color of the hover.
            </summary>
            <value>The color of the hover.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Maximum">
            <summary>
            Gets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Minimum">
            <summary>
            Gets the Minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OverriddenMaximum">
            <summary>
            Gets or sets the overridden maximum.
            </summary>
            <value>The overridden maximum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OverriddenMinimum">
            <summary>
            Gets or sets the overridden minimum.
            </summary>
            <value>The overridden minimum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OverrideMaximum">
            <summary>
            Gets or sets a value indicating whether to override the maximum.
            </summary>
            <value><c>true</c> if override maximum; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OverrideMinimum">
            <summary>
            Gets or sets a value indicating whether to override minimum.
            </summary>
            <value><c>true</c> if override minimum; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.
            </summary>
            <value>The right to left.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SidePadding">
            <summary>
            Gets or sets a value indicating whether to enable side padding.
            </summary>
            <value><c>true</c> if side padding; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SingleLine">
            <summary>
            Gets or sets a value indicating whether to enable single line.
            </summary>
            <value><c>true</c> if single line; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SingleLineColor">
            <summary>
            Gets or sets the color of the single line.
            </summary>
            <value>The color of the single line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SingleLineShadow">
            <summary>
            Gets or sets a value indicating whether to enable single line shadow.
            </summary>
            <value><c>true</c> if [single line shadow]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SingleLineThickness">
            <summary>
            Gets or sets the single line thickness.
            </summary>
            <value>The single line thickness.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.UseGradient">
            <summary>
            Gets or sets a value indicating whether to use gradient.
            </summary>
            <value><c>true</c> if use gradient; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Curved">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph"/> is curved.
            </summary>
            <value><c>true</c> if curved; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.AddValue(System.Single)">
            <summary>
            Adds the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.AddValues(System.Single[])">
            <summary>
            Adds the values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.CleanValues">
            <summary>
            Cleans the values.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.FindMinMax">
            <summary>
            Finds the minimum maximum.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.InvalidateMinMax">
            <summary>
            Invalidates the minimum maximum.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.autoAnimate">
            <summary>
            The automatic animate
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.timerDecrement">
            <summary>
            The timer decrement
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.dashOffset">
            <summary>
            The dash offset
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.AutoAnimate">
            <summary>
            Gets or sets a value indicating whether [automatic animate].
            </summary>
            <value><c>true</c> if [automatic animate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.IncludeInConstructor">
            <summary>
            Includes the in constructor.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.speedMultiplier">
            <summary>
            The speed multiplier
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.change">
            <summary>
            The change
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.reverse">
            <summary>
            The reverse
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.minimum">
            <summary>
            The minimum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.maximum">
            <summary>
            The maximum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.sluggish">
            <summary>
            The sluggish
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Reverse">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph"/> is reverse.
            </summary>
            <value><c>true</c> if reverse; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Change">
            <summary>
            Gets or sets the change.
            </summary>
            <value>The change.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SpeedMultiplier">
            <summary>
            Gets or sets the speed multiplier.
            </summary>
            <value>The speed multiplier.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Sluggish">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph"/> is sluggish.
            </summary>
            <value><c>true</c> if sluggish; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.smoothPause">
            <summary>
            The smooth pause
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.SmoothPause">
            <summary>
            Gets or sets a value indicating whether [smooth pause].
            </summary>
            <value><c>true</c> if [smooth pause]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the Timer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.TimerDecrement_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the TimerDecrement control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hoverCircleAutoAnimate">
            <summary>
            The hover circle automatic animate
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hoverCircleTimer">
            <summary>
            The hover circle timer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hoverCircleTimerDecrement">
            <summary>
            The hover circle timer decrement
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hoverCircleSpeedMultiplier">
            <summary>
            The hover circle speed multiplier
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hoverCircleChange">
            <summary>
            The hover circle change
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.hoverCircleReverse">
            <summary>
            The hover circle reverse
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverCircleAutoAnimate">
            <summary>
            Gets or sets a value indicating whether [hover circle automatic animate].
            </summary>
            <value><c>true</c> if [hover circle automatic animate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverCirlceReverse">
            <summary>
            Gets or sets a value indicating whether [hover cirlce reverse].
            </summary>
            <value><c>true</c> if [hover cirlce reverse]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverCircleChange">
            <summary>
            Gets or sets the hover circle change.
            </summary>
            <value>The hover circle change.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverCircleSpeedMultiplier">
            <summary>
            Gets or sets the hover circle speed multiplier.
            </summary>
            <value>The hover circle speed multiplier.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverTimerInterval">
            <summary>
            Gets or sets the hover timer interval.
            </summary>
            <value>The hover timer interval.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the HoverTimer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverTimerDecrement_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the HoverTimerDecrement control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraph.HoverIncludeInConstructor">
            <summary>
            Include in constructor.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphDesigner">
            <summary>
            Class ZeroitMetroGraphDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList">
            <summary>
            Class ZeroitMetroGraphSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.ClassicFillColor">
            <summary>
            Gets or sets the color of the classic fill.
            </summary>
            <value>The color of the classic fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.GridColor">
            <summary>
            Gets or sets the color of the grid.
            </summary>
            <value>The color of the grid.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.SingleLineColor">
            <summary>
            Gets or sets the color of the single line.
            </summary>
            <value>The color of the single line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.HoverBoxBorderColor">
            <summary>
            Gets or sets the color of the hover box border.
            </summary>
            <value>The color of the hover box border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.HoverBoxColor">
            <summary>
            Gets or sets the color of the hover box.
            </summary>
            <value>The color of the hover box.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.HoverColor">
            <summary>
            Gets or sets the color of the hover.
            </summary>
            <value>The color of the hover.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.OuterBorder">
            <summary>
            Gets or sets a value indicating whether [outer border].
            </summary>
            <value><c>true</c> if [outer border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.DashStyle">
            <summary>
            Gets or sets the dash style.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.DrawHorizontalLines">
            <summary>
            Gets or sets a value indicating whether [draw horizontal lines].
            </summary>
            <value><c>true</c> if [draw horizontal lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.DrawHoverData">
            <summary>
            Gets or sets a value indicating whether [draw hover data].
            </summary>
            <value><c>true</c> if [draw hover data]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.DrawHoverLine">
            <summary>
            Gets or sets a value indicating whether [draw hover line].
            </summary>
            <value><c>true</c> if [draw hover line]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.DrawVerticalLines">
            <summary>
            Gets or sets a value indicating whether [draw vertical lines].
            </summary>
            <value><c>true</c> if [draw vertical lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.SidePadding">
            <summary>
            Gets or sets a value indicating whether [side padding].
            </summary>
            <value><c>true</c> if [side padding]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.SingleLine">
            <summary>
            Gets or sets a value indicating whether [single line].
            </summary>
            <value><c>true</c> if [single line]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.SingleLineShadow">
            <summary>
            Gets or sets a value indicating whether [single line shadow].
            </summary>
            <value><c>true</c> if [single line shadow]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.SingleLineThickness">
            <summary>
            Gets or sets the single line thickness.
            </summary>
            <value>The single line thickness.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.UseGradient">
            <summary>
            Gets or sets a value indicating whether [use gradient].
            </summary>
            <value><c>true</c> if [use gradient]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.GradientPointA">
            <summary>
            Gets or sets the gradient point a.
            </summary>
            <value>The gradient point a.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.GradientPointB">
            <summary>
            Gets or sets the gradient point b.
            </summary>
            <value>The gradient point b.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.GradientColor">
            <summary>
            Gets or sets the color of the gradient.
            </summary>
            <value>The color of the gradient.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.OverrideMaximum">
            <summary>
            Gets or sets a value indicating whether [override maximum].
            </summary>
            <value><c>true</c> if [override maximum]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.OverrideMinimum">
            <summary>
            Gets or sets a value indicating whether [override minimum].
            </summary>
            <value><c>true</c> if [override minimum]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.OverriddenMaximum">
            <summary>
            Gets or sets the overridden maximum.
            </summary>
            <value>The overridden maximum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.OverriddenMinimum">
            <summary>
            Gets or sets the overridden minimum.
            </summary>
            <value>The overridden minimum.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.Curved">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList"/> is curved.
            </summary>
            <value><c>true</c> if curved; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroGraphSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart">
            <summary>
            A class collection for rendering a metro-style pie chart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._Segments">
            <summary>
            The segments
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._radius">
            <summary>
            The radius
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._EffectSize">
            <summary>
            The effect size
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._ShowEffect">
            <summary>
            The show effect
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._drawsegmentborders">
            <summary>
            The drawsegmentborders
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._UseDynamicBorderColors">
            <summary>
            The use dynamic border colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._SegmentBorderSize">
            <summary>
            The segment border size
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._Style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._ShowSegmentNames">
            <summary>
            The show segment names
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._SegmentNamesPerRow">
            <summary>
            The segment names per row
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._UseDynamicFillColors">
            <summary>
            The use dynamic fill colors
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._FillColorAlpha">
            <summary>
            The fill color alpha
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._showDonutEffect">
            <summary>
            The show donut effect
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._DonutEffectSize">
            <summary>
            The donut effect size
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._SeperateSegments">
            <summary>
            The seperate segments
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._DrawBorder">
            <summary>
            The draw border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._BorderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.abstractColor">
            <summary>
            The abstract color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.abstractBorderWidth">
            <summary>
            The abstract border width
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.unknownBorderColor">
            <summary>
            The unknown border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.unknownFIllColor">
            <summary>
            The unknown f ill color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart._BorderSize">
            <summary>
            The border size
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.shadeOffset">
            <summary>
            The shade offset
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.ShadeOffset">
            <summary>
            Gets or sets the shade offset.
            </summary>
            <value>The shade offset.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.AbstractColor">
            <summary>
            Gets or sets the color of the abstract.
            </summary>
            <value>The color of the abstract.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.AbstractBorderWidth">
            <summary>
            Gets or sets the width of the abstract border.
            </summary>
            <value>The width of the abstract border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.UnknownBorderColor">
            <summary>
            Gets or sets the color of the unknown border.
            </summary>
            <value>The color of the unknown border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.UnknownFillColor">
            <summary>
            Gets or sets the color of the unknown fill.
            </summary>
            <value>The color of the unknown fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.BorderSize">
            <summary>
            Gets or sets the size of the border.
            </summary>
            <value>The size of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.DonutEffectSize">
            <summary>
            Gets or sets the size of the donut effect.
            </summary>
            <value>The size of the donut effect.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.DrawBorder">
            <summary>
            Gets or sets a value indicating whether to draw the border.
            </summary>
            <value><c>true</c> if draw border; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.DrawSegmentBorders">
            <summary>
            Gets or sets a value indicating whether to draw segment borders.
            </summary>
            <value><c>true</c> if draw segment borders; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.DynamicColorOffset">
            <summary>
            Gets or sets the dynamic color offset.
            </summary>
            <value>The dynamic color offset.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.EffectSize">
            <summary>
            Gets or sets the size of the effect.
            </summary>
            <value>The size of the effect.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <value>The radius.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.SegmentBorderSize">
            <summary>
            Gets or sets the size of the border segment.
            </summary>
            <value>The size of the border segment.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.SegmentNamesPerRow">
            <summary>
            Gets the segment names per row.
            </summary>
            <value>The segment names per row.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.Segments">
            <summary>
            Gets the segments.
            </summary>
            <value>The segments.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.SeperateSegments">
            <summary>
            Gets or sets a value indicating whether to seperate segments.
            </summary>
            <value><c>true</c> if seperate segments; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.ShowDonutEffect">
            <summary>
            Gets or sets a value indicating whether to show donut effect.
            </summary>
            <value><c>true</c> if show donut effect; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.ShowEffect">
            <summary>
            Gets or sets a value indicating whether to show effect.
            </summary>
            <value><c>true</c> if show effect; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.ShowSegmentNames">
            <summary>
            Gets or sets a value indicating whether to show segment names.
            </summary>
            <value><c>true</c> if show segment names; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.UseDynamicBorderColors">
            <summary>
            Gets or sets a value indicating whether to use dynamic border colors.
            </summary>
            <value><c>true</c> if use dynamic border colors; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.UseDynamicFillColors">
            <summary>
            Gets or sets a value indicating whether to use dynamic fill colors.
            </summary>
            <value><c>true</c> if use dynamic fill colors; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.Path_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the Path control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.Paths_Added(System.Object,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs)">
            <summary>
            Handles the Added event of the Paths control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.Paths_Removing(System.Object,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs)">
            <summary>
            Handles the Removing event of the Paths control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.SetShade(System.Drawing.Color,System.Int32)">
            <summary>
            Sets the shade.
            </summary>
            <param name="InputColor">Color of the input.</param>
            <param name="Offset">The offset.</param>
            <returns>Color.</returns>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.SegmentAdded">
            <summary>
            Occurs when [segment added].
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.SegmentAddedEventHandler">
            <summary>
            Delegate SegmentAddedEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.TrackerStyle">
            <summary>
            Enum TrackerStyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.TrackerStyle.Abstract">
            <summary>
            The abstract
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChart.TrackerStyle.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList">
            <summary>
            Class MetroPieChartActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList._pc">
            <summary>
            The pc
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.designerActionSvc">
            <summary>
            The designer action SVC
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.DonutEffectSize">
            <summary>
            Gets or sets the size of the donut effect.
            </summary>
            <value>The size of the donut effect.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.DynamicColorOffset">
            <summary>
            Gets or sets the dynamic color offset.
            </summary>
            <value>The dynamic color offset.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.EffectSize">
            <summary>
            Gets or sets the size of the effect.
            </summary>
            <value>The size of the effect.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.SeperateSegments">
            <summary>
            Gets or sets a value indicating whether [seperate segments].
            </summary>
            <value><c>true</c> if [seperate segments]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.ShowDonutEffect">
            <summary>
            Gets or sets a value indicating whether [show donut effect].
            </summary>
            <value><c>true</c> if [show donut effect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.ShowEffect">
            <summary>
            Gets or sets a value indicating whether [show effect].
            </summary>
            <value><c>true</c> if [show effect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.UseDynamicBorderColors">
            <summary>
            Gets or sets a value indicating whether [use dynamic border colors].
            </summary>
            <value><c>true</c> if [use dynamic border colors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.UseDynamicFillColors">
            <summary>
            Gets or sets a value indicating whether [use dynamic fill colors].
            </summary>
            <value><c>true</c> if [use dynamic fill colors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroPieChartActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner">
            <summary>
            Class MetroPieChartDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner.lists">
            <summary>
            The lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner.HostControl">
            <summary>
            Gets the host control.
            </summary>
            <value>The host control.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner.SelectionRules">
            <summary>
            Gets the selection rules that indicate the movement capabilities of a component.
            </summary>
            <value>The selection rules.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroPieChartDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.
            </summary>
            <param name="properties">The properties for the class of the component.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartDesigner">
            <summary>
            Class ZeroitMetroPieChartDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList">
            <summary>
            Class ZeroitMetroPieChartSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.DrawBorder">
            <summary>
            Gets or sets a value indicating whether [draw border].
            </summary>
            <value><c>true</c> if [draw border]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.DrawSegmentBorders">
            <summary>
            Gets or sets a value indicating whether [draw segment borders].
            </summary>
            <value><c>true</c> if [draw segment borders]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.SeperateSegments">
            <summary>
            Gets or sets a value indicating whether [seperate segments].
            </summary>
            <value><c>true</c> if [seperate segments]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.ShowDonutEffect">
            <summary>
            Gets or sets a value indicating whether [show donut effect].
            </summary>
            <value><c>true</c> if [show donut effect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.ShowEffect">
            <summary>
            Gets or sets a value indicating whether [show effect].
            </summary>
            <value><c>true</c> if [show effect]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.ShowSegmentNames">
            <summary>
            Gets or sets a value indicating whether [show segment names].
            </summary>
            <value><c>true</c> if [show segment names]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.UseDynamicBorderColors">
            <summary>
            Gets or sets a value indicating whether [use dynamic border colors].
            </summary>
            <value><c>true</c> if [use dynamic border colors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.UseDynamicFillColors">
            <summary>
            Gets or sets a value indicating whether [use dynamic fill colors].
            </summary>
            <value><c>true</c> if [use dynamic fill colors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.BorderSize">
            <summary>
            Gets or sets the size of the border.
            </summary>
            <value>The size of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.DonutEffectSize">
            <summary>
            Gets or sets the size of the donut effect.
            </summary>
            <value>The size of the donut effect.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.DynamicColorOffset">
            <summary>
            Gets or sets the dynamic color offset.
            </summary>
            <value>The dynamic color offset.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.EffectSize">
            <summary>
            Gets or sets the size of the effect.
            </summary>
            <value>The size of the effect.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <value>The radius.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.SegmentBorderSize">
            <summary>
            Gets or sets the size of the segment border.
            </summary>
            <value>The size of the segment border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.Segments">
            <summary>
            Gets or sets the segments.
            </summary>
            <value>The segments.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment">
            <summary>
            Class ZeroitMetroPieChartSegment.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.refer">
            <summary>
            The refer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment._value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment._fillColor">
            <summary>
            The fill color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.maxStored">
            <summary>
            The maximum stored
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment._borderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment._style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment._fillStyle">
            <summary>
            The fill style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment._UseFillStyle">
            <summary>
            The use fill style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.FillStyle">
            <summary>
            Gets or sets the fill style.
            </summary>
            <value>The fill style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.UseFillStyle">
            <summary>
            Gets or sets a value indicating whether [use fill style].
            </summary>
            <value><c>true</c> if [use fill style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.__ENCAddToList(System.Object)">
            <summary>
            Encs the add to list.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.ApplyStyle(Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle)">
            <summary>
            Applies the style.
            </summary>
            <param name="eStyle">The e style.</param>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle">
            <summary>
            Enum eStyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.LightCyan">
            <summary>
            The light cyan
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.LightBlue">
            <summary>
            The light blue
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.LightRed">
            <summary>
            The light red
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.LightOrange">
            <summary>
            The light orange
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.AbstractRed">
            <summary>
            The abstract red
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.AbstractBlue">
            <summary>
            The abstract blue
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.AbstractPurple">
            <summary>
            The abstract purple
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.DarkBlue">
            <summary>
            The dark blue
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.SoapRed">
            <summary>
            The SOAP red
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.SoapGreen">
            <summary>
            The SOAP green
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment.eStyle.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection">
            <summary>
            Class ZeroitMetroPieChartSegmentCollection.
            </summary>
            <seealso cref="!:System.Collections.ObjectModel.Collection&lt;Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment&gt;" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.refer">
            <summary>
            The refer
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.__ENCAddToList(System.Object)">
            <summary>
            Encs the add to list.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.InsertItem(System.Int32,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.SetItem(System.Int32,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.ItemAdded">
            <summary>
            Occurs when [item added].
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollection.ItemRemoving">
            <summary>
            Occurs when [item removing].
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs">
            <summary>
            Class ZeroitMetroPieChartSegmentCollectionEventArgs.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs._item">
            <summary>
            The item
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs.#ctor(Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroPieChartSegmentCollectionEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask">
            <summary>
            A class collection for rendering a metro-style task.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.TaskShape">
            <summary>
            Enum representing the Task Shape
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.TaskShape.Circle">
            <summary>
            The circle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.TaskShape.Rectangle">
            <summary>
            The rectangle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.TaskShape.Pie">
            <summary>
            The pie
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.taskShape">
            <summary>
            The task shape
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.pieAngles">
            <summary>
            The pie angles
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._PointCollection">
            <summary>
            The point collection
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._FinishedColor">
            <summary>
            The finished color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._LineColor">
            <summary>
            The line color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._HoverColor">
            <summary>
            The hover color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._StartPointWidth">
            <summary>
            The start point width
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._Style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._PointPosition">
            <summary>
            The point position
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._TextRectangles">
            <summary>
            The text rectangles
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.distance">
            <summary>
            The distance
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._HotPoint">
            <summary>
            The hot point
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._HotIndex">
            <summary>
            The hot index
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask._AutoStyle">
            <summary>
            The automatic style
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            </summary>
            <value>The sweep angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.PieAngle">
            <summary>
            Gets or sets the pie angle.
            </summary>
            <value>The pie angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.AutoStyle">
            <summary>
            Gets or sets a value indicating whether to enable automatic style.
            </summary>
            <value><c>true</c> if automatic style; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.FinishedColor">
            <summary>
            Gets or sets the color of the finished.
            </summary>
            <value>The color of the finished.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.HoverColor">
            <summary>
            Gets or sets the color of the control when hovered.
            </summary>
            <value>The color of the hover.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.StartPointWidth">
            <summary>
            Gets or sets the width of the start point.
            </summary>
            <value>The start width of the point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.Shape">
            <summary>
            Gets or sets the shape.
            </summary>
            <value>The shape.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.Item_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the Item control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseClick" /> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.Point_Added(System.Object,Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs)">
            <summary>
            Handles the Added event of the Point control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.Point_Removed(System.Object,Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs)">
            <summary>
            Handles the Removed event of the Point control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.PointAdded">
            <summary>
            Occurs when [point added].
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.PointClicked">
            <summary>
            Occurs when [point clicked].
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.PointAddedEventHandler">
            <summary>
            Delegate PointAddedEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTask.PointClickedEventHandler">
            <summary>
            Delegate PointClickedEventHandler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.PieAngles">
            <summary>
            Class PieAngles.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.PieAngles.startAngle">
            <summary>
            The start angle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.PieAngles.sweepAngle">
            <summary>
            The sweep angle
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.PieAngles.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.PieAngles.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            </summary>
            <value>The sweep angle.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskDesigner">
            <summary>
            Class ZeroitMetroTaskDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList">
            <summary>
            Class ZeroitMetroTaskSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.FinishedColor">
            <summary>
            Gets or sets the color of the finished.
            </summary>
            <value>The color of the finished.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.HoverColor">
            <summary>
            Gets or sets the color of the hover.
            </summary>
            <value>The color of the hover.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.Shape">
            <summary>
            Gets or sets the shape.
            </summary>
            <value>The shape.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.StartPointWidth">
            <summary>
            Gets or sets the start width of the point.
            </summary>
            <value>The start width of the point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            </summary>
            <value>The sweep angle.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection">
            <summary>
            Class MetroTaskPointCollection.
            </summary>
            <seealso cref="!:System.Collections.ObjectModel.Collection&lt;Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskPoint&gt;" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection.AddItems(Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskPoint[])">
            <summary>
            Adds the items.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection.InsertItem(System.Int32,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskPoint)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection.SetItem(System.Int32,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskPoint)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection.ItemAdded">
            <summary>
            Occurs when [item added].
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollection.ItemRemoving">
            <summary>
            Occurs when [item removing].
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs">
            <summary>
            Class MetroTaskPointCollectionEventArgs.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs._item">
            <summary>
            The item
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs.#ctor(Zeroit.Framework.BasicCharts.Metro.ZeroitMetroTaskPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.MetroTaskPointCollectionEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart">
            <summary>
            A class collection for rendering a metro-style web chart.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.CornerShapes">
            <summary>
            Enum CornerShapes
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.CornerShapes.Rectangular">
            <summary>
            The rectangular
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.CornerShapes.Circular">
            <summary>
            The circular
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillModes">
            <summary>
            Enum FillModes
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillModes.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillModes.Gradient">
            <summary>
            The gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillModes.MultiGradient">
            <summary>
            The multi gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillModes.Hatch">
            <summary>
            The hatch
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._PointCollection">
            <summary>
            The point collection
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.webPoints">
            <summary>
            The web points
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.webChartPoints">
            <summary>
            The web chart points
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.enumerator">
            <summary>
            The enumerator
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.enumerator1">
            <summary>
            The enumerator1
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.toolTip">
            <summary>
            The tool tip
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._Style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._ChartWidth">
            <summary>
            The chart width
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._PointSize">
            <summary>
            The point size
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._InnerStructureStages">
            <summary>
            The inner structure stages
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._WebPointWidth">
            <summary>
            The web point width
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._WebBorderWidth">
            <summary>
            The web border width
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._InnerStructureWidth">
            <summary>
            The inner structure width
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FullCircle">
            <summary>
            The full circle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._WebBorderIsGradient">
            <summary>
            The web border is gradient
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._DrawWebPoints">
            <summary>
            The draw web points
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._DrawInnerStructure">
            <summary>
            The draw inner structure
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._ShowToolTip">
            <summary>
            The show tool tip
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._FillColor">
            <summary>
            The fill color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._FillSecondColor">
            <summary>
            The fill second color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._WebBorderColor">
            <summary>
            The web border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._OuterStructureBorder">
            <summary>
            The outer structure border
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._DesignModeColor">
            <summary>
            The design mode color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._CornerBorderColor">
            <summary>
            The corner border color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._CornerFillColor">
            <summary>
            The corner fill color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._InnerStructureColor">
            <summary>
            The inner structure color
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._HatchStyle">
            <summary>
            The hatch style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._FillMode">
            <summary>
            The fill mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._CornerShape">
            <summary>
            The corner shape
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._OuterPoints">
            <summary>
            The outer points
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._AutoStyle">
            <summary>
            The automatic style
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._MouseState">
            <summary>
            The mouse state
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._HotIndex">
            <summary>
            The hot index
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart._HotRectangle">
            <summary>
            The hot rectangle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.bezierCurve">
            <summary>
            The bezier curve
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.AutoStyle">
            <summary>
            Gets or sets a value indicating whether to enable/disable automatic style.
            </summary>
            <value><c>true</c> if automatic style; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.ChartWidth">
            <summary>
            Gets or sets the width of the chart.
            </summary>
            <value>The width of the chart.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.ContextMenuStrip">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.
            </summary>
            <value>The context menu strip.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.CornerBorderColor">
            <summary>
            Gets or sets the color of the border's corner.
            </summary>
            <value>The color of the border's corner.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.CornerFillColor">
            <summary>
            Gets or sets the color of the corner fill.
            </summary>
            <value>The color of the corner fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.CornerShape">
            <summary>
            Gets or sets the corner shape.
            </summary>
            <value>The corner shape.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.DesignModeColor">
            <summary>
            Gets or sets the color of control when in design mode.
            </summary>
            <value>The color of the design mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.DrawInnerStructure">
            <summary>
            Gets or sets a value indicating whether to draw inner structure.
            </summary>
            <value><c>true</c> if draw inner structure; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.DrawWebPoints">
            <summary>
            Gets or sets a value indicating whether to draw web points.
            </summary>
            <value><c>true</c> if draw web points; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
            <value>The fill mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.FillSecondColor">
            <summary>
            Gets or sets the color of the second fill.
            </summary>
            <value>The color of the fill second.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.HatchStyle">
            <summary>
            Gets or sets the hatch style.
            </summary>
            <value>The hatch style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.InnerStructureColor">
            <summary>
            Gets or sets the color of the inner structure.
            </summary>
            <value>The color of the inner structure.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.InnerStructureStages">
            <summary>
            Gets or sets the inner structure stages.
            </summary>
            <value>The inner structure stages.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.InnerStructureWidth">
            <summary>
            Gets or sets the width of the inner structure.
            </summary>
            <value>The width of the inner structure.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.OuterStructureBorder">
            <summary>
            Gets or sets the outer structure border.
            </summary>
            <value>The outer structure border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.WebPoints">
            <summary>
            Gets or sets the web points.
            </summary>
            <value>The web points.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.PointSize">
            <summary>
            Gets or sets the size of the point.
            </summary>
            <value>The size of the point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.
            </summary>
            <value>The right to left.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.ShowToolTip">
            <summary>
            Gets or sets a value indicating whether to show tool tip.
            </summary>
            <value><c>true</c> if show tool tip; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.WebBorderColor">
            <summary>
            Gets or sets the color of the web border.
            </summary>
            <value>The color of the web border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.WebBorderIsGradient">
            <summary>
            Gets or sets a value indicating whether web border is gradient.
            </summary>
            <value><c>true</c> if web border is gradient; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.WebBorderWidth">
            <summary>
            Gets or sets the width of the web border.
            </summary>
            <value>The width of the web border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.WebPointWidth">
            <summary>
            Gets or sets the width of the web point.
            </summary>
            <value>The width of the web point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.BezierCurve">
            <summary>
            Gets or sets a value indicating whether [bezier curve].
            </summary>
            <value><c>true</c> if [bezier curve]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart" /> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.DrawDesignControl(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the design control.
            </summary>
            <param name="g">The g.</param>
            <param name="r">The r.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.DrawInnerStructureGrid(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point[],System.Int32)">
            <summary>
            Draws the inner structure grid.
            </summary>
            <param name="g">The g.</param>
            <param name="centerPoint">The center point.</param>
            <param name="outerPoints">The outer points.</param>
            <param name="stageCount">The stage count.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.GetPointOnLine(System.Drawing.Point,System.Drawing.Point,System.Int32)">
            <summary>
            Gets the point on line.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="perc">The perc.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.DrawWeb(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Collections.Generic.List{System.Drawing.Point},System.Collections.Generic.List{System.Drawing.Point},System.Collections.Generic.IEnumerator{Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint},System.Collections.Generic.IEnumerator{Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint},System.Drawing.Graphics,System.Drawing.Brush)">
            <summary>
            Draws the web.
            </summary>
            <param name="point">The point.</param>
            <param name="item">The item.</param>
            <param name="point1">The point1.</param>
            <param name="points">The points.</param>
            <param name="points1">The points1.</param>
            <param name="enumerator">The enumerator.</param>
            <param name="enumerator1">The enumerator1.</param>
            <param name="graphics">The graphics.</param>
            <param name="linearGradientBrush">The linear gradient brush.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.OnBackColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.autoAnimate">
            <summary>
            The automatic animate
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.timerDecrement">
            <summary>
            The timer decrement
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.AutoAnimate">
            <summary>
            Gets or sets a value indicating whether [automatic animate].
            </summary>
            <value><c>true</c> if [automatic animate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the Timer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.TimerDecrement_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the TimerDecrement control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChart.IncludeInConstructor">
            <summary>
            Includes the in constructor.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartDesigner">
            <summary>
            Class ZeroitMetroWebChartDesigner.
            </summary>
            <seealso cref="T:System.Windows.Forms.Design.ControlDesigner" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartDesigner.actionLists">
            <summary>
            The action lists
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Remove Button and Control properties that are
            not supported by the <see cref="!:MACButton" />.
            </summary>
            <param name="Properties">The properties.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList">
            <summary>
            Class ZeroitMetroWebChartSmartTagActionList.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.colUserControl">
            <summary>
            The col user control
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.designerActionUISvc">
            <summary>
            The designer action UI SVC
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList"/> class.
            </summary>
            <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the name of the property by.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns>PropertyDescriptor.</returns>
            <exception cref="T:System.ArgumentException">Matching ColorLabel property not found!</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.BackColor">
            <summary>
            Gets or sets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.ChartWidth">
            <summary>
            Gets or sets the width of the chart.
            </summary>
            <value>The width of the chart.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.CornerBorderColor">
            <summary>
            Gets or sets the color of the corner border.
            </summary>
            <value>The color of the corner border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.CornerFillColor">
            <summary>
            Gets or sets the color of the corner fill.
            </summary>
            <value>The color of the corner fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.DesignModeColor">
            <summary>
            Gets or sets the color of the design mode.
            </summary>
            <value>The color of the design mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.InnerStructureColor">
            <summary>
            Gets or sets the color of the inner structure.
            </summary>
            <value>The color of the inner structure.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.FillSecondColor">
            <summary>
            Gets or sets the color of the fill second.
            </summary>
            <value>The color of the fill second.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.OuterStructureBorder">
            <summary>
            Gets or sets the outer structure border.
            </summary>
            <value>The outer structure border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.WebBorderColor">
            <summary>
            Gets or sets the color of the web border.
            </summary>
            <value>The color of the web border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.CornerShape">
            <summary>
            Gets or sets the corner shape.
            </summary>
            <value>The corner shape.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.DrawInnerStructure">
            <summary>
            Gets or sets a value indicating whether [draw inner structure].
            </summary>
            <value><c>true</c> if [draw inner structure]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.DrawWebPoints">
            <summary>
            Gets or sets a value indicating whether [draw web points].
            </summary>
            <value><c>true</c> if [draw web points]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.ShowToolTip">
            <summary>
            Gets or sets a value indicating whether [show tool tip].
            </summary>
            <value><c>true</c> if [show tool tip]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.WebBorderIsGradient">
            <summary>
            Gets or sets a value indicating whether [web border is gradient].
            </summary>
            <value><c>true</c> if [web border is gradient]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.BezierCurve">
            <summary>
            Gets or sets a value indicating whether [bezier curve].
            </summary>
            <value><c>true</c> if [bezier curve]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
            <value>The fill mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.HatchStyle">
            <summary>
            Gets or sets the hatch style.
            </summary>
            <value>The hatch style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.InnerStructureStages">
            <summary>
            Gets or sets the inner structure stages.
            </summary>
            <value>The inner structure stages.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.InnerStructureWidth">
            <summary>
            Gets or sets the width of the inner structure.
            </summary>
            <value>The width of the inner structure.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.WebPoints">
            <summary>
            Gets or sets the web points.
            </summary>
            <value>The web points.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.PointSize">
            <summary>
            Gets or sets the size of the point.
            </summary>
            <value>The size of the point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.WebBorderWidth">
            <summary>
            Gets or sets the width of the web border.
            </summary>
            <value>The width of the web border.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.WebPointWidth">
            <summary>
            Gets or sets the width of the web point.
            </summary>
            <value>The width of the web point.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.AutoAnimate">
            <summary>
            Gets or sets a value indicating whether [automatic animate].
            </summary>
            <value><c>true</c> if [automatic animate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartSmartTagActionList.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint">
            <summary>
            Class ZeroitMetroWebChartPoint.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint.value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint.text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint.color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection">
            <summary>
            Class ZeroitMetroWebChartPointCollection.
            </summary>
            <seealso cref="!:System.Collections.ObjectModel.Collection&lt;Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint&gt;" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection.AddItems(Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint[])">
            <summary>
            Adds the items.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection.InsertItem(System.Int32,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection.SetItem(System.Int32,Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection.ItemAdded">
            <summary>
            Occurs when [item added].
            </summary>
        </member>
        <member name="E:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollection.ItemRemoving">
            <summary>
            Occurs when [item removing].
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollectionEventArgs">
            <summary>
            Class ZeroitMetroWebChartPointCollectionEventArgs.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollectionEventArgs._item">
            <summary>
            The item
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollectionEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollectionEventArgs.#ctor(Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.Metro.ZeroitMetroWebChartPointCollectionEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog">
            <summary>
            Class MSChartExtensionZoomDialog.
            </summary>
            <seealso cref="T:System.Windows.Forms.Form" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.ptrChartArea">
            <summary>
            The PTR chart area
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.ptrXAxis">
            <summary>
            The PTR x axis
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.ptrYAxis">
            <summary>
            The PTR x axis
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.#ctor(System.Windows.Forms.DataVisualization.Charting.ChartArea)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog"/> class.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.cbAxisType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the cbAxisType control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.btOK_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the btOK control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.ValidateInput(System.Windows.Forms.TextBox)">
            <summary>
            Validates the input.
            </summary>
            <param name="sender">The sender.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.FormatDouble(System.Double)">
            <summary>
            Formats the double.
            </summary>
            <param name="number">The number.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.txtXMin">
            <summary>
            The text x minimum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.label1">
            <summary>
            The label1
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.label2">
            <summary>
            The label2
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.txtYMin">
            <summary>
            The text y minimum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.txtYMax">
            <summary>
            The text y maximum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.txtXMax">
            <summary>
            The text x maximum
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.label3">
            <summary>
            The label3
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.label4">
            <summary>
            The label4
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.txtXLimit">
            <summary>
            The text x limit
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.txtYLimit">
            <summary>
            The text y limit
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.panel1">
            <summary>
            The panel1
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.btCancel">
            <summary>
            The bt cancel
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.btOK">
            <summary>
            The bt ok
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.MSChartExtensionZoomDialog.cbAxisType">
            <summary>
            The cb axis type
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ScaleMode">
            <summary>
            Scale mode for value aspect ratio
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ScaleMode.Absolute">
            <summary>
            Absolute Scale Mode: Values from 0 to 100 are accepted and displayed
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ScaleMode.Relative">
            <summary>
            Relative Scale Mode: All values are allowed and displayed in a proper relation
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.TimerMode">
            <summary>
            Chart Refresh Mode Timer Control Mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.TimerMode.Disabled">
            <summary>
            Chart is refreshed when a value is added
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.TimerMode.Simple">
            <summary>
            Chart is refreshed every <c>TimerInterval</c> milliseconds, adding all values
            in the queue to the chart. If there are no values in the queue, a 0 (zero) is added
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.TimerMode.SynchronizedAverage">
            <summary>
            Chart is refreshed every <c>TimerInterval</c> milliseconds, adding an average of
            all values in the queue to the chart. If there are no values in the queue,
            0 (zero) is added
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.TimerMode.SynchronizedSum">
            <summary>
            Chart is refreshed every <c>TimerInterval</c> milliseconds, adding the sum of
            all values in the queue to the chart. If there are no values in the queue,
            0 (zero) is added
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart">
            <summary>
            Class ZeroitPerformanceChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
            <summary>
            Class ZeroitPerformanceChart.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.MAX_VALUE_COUNT">
            <summary>
            The maximum value count
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.GRID_SPACING">
            <summary>
            The grid spacing
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.visibleValues">
            <summary>
            The visible values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.valueSpacing">
            <summary>
            The value spacing
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.currentMaxValue">
            <summary>
            The current maximum value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.gridScrollOffset">
            <summary>
            The grid scroll offset
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.averageValue">
            <summary>
            The average value
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.b3dstyle">
            <summary>
            The b3dstyle
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.scaleMode">
            <summary>
            The scale mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.timerMode">
            <summary>
            The timer mode
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.drawValues">
            <summary>
            The draw values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.waitingValues">
            <summary>
            The waiting values
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.perfChartStyle">
            <summary>
            The perf chart style
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart"/> class.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.PerfChartStyle">
            <summary>
            Gets or sets the perf chart style.
            </summary>
            <value>The perf chart style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.BorderStyle">
            <summary>
            Gets or sets the border style of the user control.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.ScaleMode">
            <summary>
            Gets or sets the scale mode.
            </summary>
            <value>The scale mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.TimerMode">
            <summary>
            Gets or sets the timer mode.
            </summary>
            <value>The timer mode.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.TimerInterval">
            <summary>
            Gets or sets the timer interval.
            </summary>
            <value>The timer interval.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">TimerInterval - The Timer interval must be greater then 15</exception>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.Clear">
            <summary>
            Clears the whole chart
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.AddValue(System.Decimal)">
            <summary>
            Adds a value to the Chart Line
            </summary>
            <param name="value">progress value</param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.AddValueToQueue(System.Decimal)">
            <summary>
            Add value to the queue for a timed refresh
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.ChartAppend(System.Decimal)">
            <summary>
            Appends value <paramref name="value" /> to the chart (without redrawing)
            </summary>
            <param name="value">performance value</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.ChartAppendFromQueue">
            <summary>
            Appends Values from queue
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.CalcVerticalPosition(System.Decimal)">
            <summary>
            Calculates the vertical Position of a value in relation the chart size,
            Scale Mode and, if ScaleMode is Relative, to the current maximum value
            </summary>
            <param name="value">performance value</param>
            <returns>vertical Point position in Pixels</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.GetHighestValueForRelativeMode">
            <summary>
            Returns the currently highest (displayed) value, for Relative ScaleMode
            </summary>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.DrawChart(System.Drawing.Graphics)">
            <summary>
            Draws the chart (w/o background or grid, but with border) to the Graphics canvas
            </summary>
            <param name="g">Graphics</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.DrawAverageLine(System.Drawing.Graphics)">
            <summary>
            Draws the average line.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.DrawBackgroundAndGrid(System.Drawing.Graphics)">
            <summary>
            Draws the background gradient and the grid into Graphics <paramref name="g" />
            </summary>
            <param name="g">Graphic</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
            Override OnPaint method
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.OnResize(System.EventArgs)">
            <summary>
            Handles the <see cref="E:Resize" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.colorSet_ColorSetChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ColorSetChanged event of the colorSet control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.tmrRefresh_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the tmrRefresh control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.components">
            <summary>
            Erforderliche Designervariable.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.Dispose(System.Boolean)">
            <summary>
            Verwendete Ressourcen bereinigen.
            </summary>
            <param name="disposing">True, wenn verwaltete Ressourcen gelöscht werden sollen; andernfalls False.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.InitializeComponent">
            <summary>
            Erforderliche Methode für die Designerunterstützung.
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPerformanceChart.tmrRefresh">
            <summary>
            The TMR refresh
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.PerfChartStyle">
            <summary>
            Class PerfChartStyle.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.verticalGridPen">
            <summary>
            The vertical grid pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.horizontalGridPen">
            <summary>
            The horizontal grid pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.avgLinePen">
            <summary>
            The average line pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.chartLinePen">
            <summary>
            The chart line pen
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.backgroundColorTop">
            <summary>
            The background color top
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.backgroundColorBottom">
            <summary>
            The background color bottom
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.showVerticalGridLines">
            <summary>
            The show vertical grid lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.showHorizontalGridLines">
            <summary>
            The show horizontal grid lines
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.showAverageLine">
            <summary>
            The show average line
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.PerfChartStyle.antiAliasing">
            <summary>
            The anti aliasing
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PerfChartStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.PerfChartStyle"/> class.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.ShowVerticalGridLines">
            <summary>
            Gets or sets a value indicating whether [show vertical grid lines].
            </summary>
            <value><c>true</c> if [show vertical grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.ShowHorizontalGridLines">
            <summary>
            Gets or sets a value indicating whether [show horizontal grid lines].
            </summary>
            <value><c>true</c> if [show horizontal grid lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.ShowAverageLine">
            <summary>
            Gets or sets a value indicating whether [show average line].
            </summary>
            <value><c>true</c> if [show average line]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.VerticalGridPen">
            <summary>
            Gets or sets the vertical grid pen.
            </summary>
            <value>The vertical grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.HorizontalGridPen">
            <summary>
            Gets or sets the horizontal grid pen.
            </summary>
            <value>The horizontal grid pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.AvgLinePen">
            <summary>
            Gets or sets the average line pen.
            </summary>
            <value>The average line pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.ChartLinePen">
            <summary>
            Gets or sets the chart line pen.
            </summary>
            <value>The chart line pen.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.AntiAliasing">
            <summary>
            Gets or sets a value indicating whether [anti aliasing].
            </summary>
            <value><c>true</c> if [anti aliasing]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.BackgroundColorTop">
            <summary>
            Gets or sets the background color top.
            </summary>
            <value>The background color top.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.PerfChartStyle.BackgroundColorBottom">
            <summary>
            Gets or sets the background color bottom.
            </summary>
            <value>The background color bottom.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ChartPen">
            <summary>
            Class ChartPen.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ChartPen.pen">
            <summary>
            The pen
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ChartPen.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ChartPen"/> class.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartPen.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartPen.DashStyle">
            <summary>
            Gets or sets the dash style.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartPen.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ChartPen.Pen">
            <summary>
            Gets the pen.
            </summary>
            <value>The pen.</value>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated">
            <summary>
            ZeroitPlotter control.
            Use the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to set the plot color.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated"/> class.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.LayoutControls">
            <summary>
            Layouts the controls.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.plotArea_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event of the plotArea control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.scrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles the Scroll event of the scrollBar control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.SetScrollBarProperties">
            <summary>
            Sets the scroll bar properties.
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.plotArea">
            <summary>
            The plot area
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.scrollBar">
            <summary>
            The scroll bar
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.Min">
            <summary>
            Gets or sets the sample value that corresponds to the bottom edge of the plot area.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.min">
            <summary>
            The minimum
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.Max">
            <summary>
            Gets or sets the sample value that corresponds to the top edge of the plot area.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.max">
            <summary>
            The maximum
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.Add(System.Single)">
            <summary>
            Add a sample point to the graph.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.InvalidateAndUpdateScrollBar">
            <summary>
            Invalidates the and update scroll bar.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.DX">
            <summary>
            Gets the distance between sample points.
            TODO: allow to customize this.
            </summary>
            <value>The dx.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.values">
            <summary>
            The values
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.PaintGraph(System.Drawing.Graphics)">
            <summary>
            Paints the graph.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.ScaleY(System.Single)">
            <summary>
            Scales the y.
            </summary>
            <param name="y">The y.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.ZeroitPlotterAnimated.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.PlotArea">
            <summary>
            Class PlotArea.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.PlotArea.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.PlotArea"/> class.
            </summary>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.RingBuffer`1">
            <summary>
            Class RingBuffer.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.RingBuffer`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Zeroit.Framework.BasicCharts.RingBuffer`1"/> class.
            </summary>
            <param name="initialCapacity">The initial capacity.</param>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.RingBuffer`1.Capacity">
            <summary>
            Gets the capacity.
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.RingBuffer`1.buf">
            <summary>
            The buf
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.RingBuffer`1.head">
            <summary>
            The head
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.RingBuffer`1.tail">
            <summary>
            The head
            </summary>
        </member>
        <member name="F:Zeroit.Framework.BasicCharts.RingBuffer`1.empty">
            <summary>
            The empty
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.RingBuffer`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.RingBuffer`1.Add(`0)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.RingBuffer`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:T"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Zeroit.Framework.BasicCharts.RingBuffer`1.ShiftIndex(System.Int32)">
            <summary>
            Shifts the index.
            </summary>
            <param name="i">The i.</param>
            <returns>System.Int32.</returns>
            <exception cref="T:System.ArgumentException">StartRow must be less than Count.</exception>
        </member>
        <member name="T:Zeroit.Framework.BasicCharts.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Properties.Resources.AboutDlgBackground">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Properties.Resources.CAELogoSmall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Properties.Resources.FacebookIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Properties.Resources.GithubIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Zeroit.Framework.BasicCharts.Properties.Resources.MSChartExtensionLogo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
